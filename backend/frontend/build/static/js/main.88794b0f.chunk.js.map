{"version":3,"sources":["constants/productConstants.js","constants/notificationConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/notificationReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","actions/orderActions.js","screens/ProfileScreen.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","screens/CustomDoorScreen.js","screens/NotificationCenterScreen.js","actions/notificationActions.js","screens/NotificationEditScreen.js","screens/AboutScreen.js","screens/DetailScreen.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_CREATE_V2_REQUEST","PRODUCT_CREATE_V2_SUCCESS","PRODUCT_CREATE_V2_FAIL","PRODUCT_CREATE_V2_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","NOTIFICATION_LIST_REQUEST","NOTIFICATION_LIST_SUCCESS","NOTIFICATION_LIST_FAIL","NOTIFICATION_DETAILS_REQUEST","NOTIFICATION_DETAILS_SUCCESS","NOTIFICATION_DETAILS_FAIL","NOTIFICATION_DELETE_REQUEST","NOTIFICATION_DELETE_SUCCESS","NOTIFICATION_DELETE_FAIL","NOTIFICATION_CREATE_REQUEST","NOTIFICATION_CREATE_SUCCESS","NOTIFICATION_CREATE_FAIL","NOTIFICATION_CREATE_RESET","NOTIFICATION_UPDATE_REQUEST","NOTIFICATION_UPDATE_SUCCESS","NOTIFICATION_UPDATE_FAIL","NOTIFICATION_UPDATE_RESET","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productCreateV2","productUpdate","productReviewCreate","productTopRated","notificationList","notifications","notificationDetails","notification","notificationDelete","notificationCreate","notificationUpdate","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","name","onChange","target","value","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","Header","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","style","backgroundColor","href","color","Rating","text","Product","formatter","Intl","NumberFormat","currency","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","format","price","Loader","Spinner","animation","role","height","width","margin","display","Message","children","Alert","Paginate","split","Pagination","Array","keys","active","listProducts","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","search","Row","category","Col","sm","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","ListGroup","description","countInStock","xs","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","Number","removeFromCartHandler","removeFromCart","rounded","reduce","acc","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","getOrderDetails","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","setSdkReady","loadingPay","successPay","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","Id","isDelivered","deliveredAt","background","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","CustomDoorScreen","lebar","setLebar","tinggi","setTinggi","kuantitas","setKuantitas","warna","setWarna","tipe","setTipe","kunci","setKunci","successCreateV2","createdProductV2","parseInt","min","NotificationCenterScreen","createdNotification","listNotifications","deleteNotification","link","NotificationEditScreen","notificationId","setTitle","setLink","updateNotification","AboutUs","DetailScreen","includes","toString","replace","App","path","component","exact","AboutScreen","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById","URL","process","origin","addEventListener","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"uLAAaA,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBAGpBC,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAAuB,uBAGvBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBAEtBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAGvBC,EAA4B,4BAC5BC,EAA4B,4BAC5BC,EAAyB,yBACzBC,EAA0B,0BAG1BC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAGvBC,EAAgC,gCAChCC,EAAgC,gCAChCC,EAA6B,6BAC7BC,EAA8B,8BAE9BC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAmB,mBCvCnBC,EAA4B,4BAC5BC,EAA4B,4BAC5BC,EAAyB,yBAGzBC,EAA+B,+BAC/BC,EAA+B,+BAC/BC,EAA4B,4BAG5BC,EAA8B,8BAC9BC,EAA8B,8BAC9BC,EAA2B,2BAG3BC,EAA8B,8BAC9BC,EAA8B,8BAC9BC,EAA2B,2BAC3BC,EAA4B,4BAG5BC,EAA8B,8BAC9BC,GAA8B,8BAC9BC,GAA2B,2BAC3BC,GAA4B,4B,SCxB5BC,GAAgB,gBAChBC,GAAmB,mBAEnBC,GAA6B,6BAE7BC,GAA2B,2BAE3BC,GAAmB,mBCPnBC,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAkB,kBAElBC,GAAc,cAEdC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBAErBC,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAoB,oBACpBC,GAAqB,qBAErBC,GAA8B,8BAC9BC,GAA8B,8BAC9BC,GAA2B,2BAC3BC,GAA4B,4BAE5BC,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAiB,iBACjBC,GAAkB,kBAGlBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBAGnBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBACnBC,GAAoB,oBClCpBC,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAoB,oBAEpBC,GAAqB,qBAErBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBAErBC,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAiB,iBACjBC,GAAkB,kBAElBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBAEtBC,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAkB,kBAElBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBCgB7BC,GAAUC,0BAAgB,CAC5BC,YCJ8B,WAAuC,IAAtCC,EAAqC,uDAA7B,CAAEC,SAAU,IAAMC,EAAW,uCACpE,OAAQA,EAAOC,MACX,KAAKxG,EACD,MAAO,CAAEyG,SAAS,EAAMH,SAAU,IAEtC,KAAKrG,EACD,MAAO,CACHwG,SAAS,EACTH,SAAUC,EAAOG,QAAQJ,SACzBK,KAAMJ,EAAOG,QAAQC,KACrBC,MAAOL,EAAOG,QAAQE,OAG9B,KAAK1G,EACD,MAAO,CAAEuG,SAAS,EAAOI,MAAON,EAAOG,SAE3C,QACI,OAAOL,IDZfS,eCkBiC,WAAmD,IAAlDT,EAAiD,uDAAzC,CAAEU,QAAS,CAAEC,QAAS,KAAQT,EAAW,uCACnF,OAAQA,EAAOC,MACX,KAAKrG,EACD,OAAO,aAAEsG,SAAS,GAASJ,GAE/B,KAAKjG,EACD,MAAO,CAAEqG,SAAS,EAAOM,QAASR,EAAOG,SAE7C,KAAKrG,EACD,MAAO,CAAEoG,SAAS,EAAOI,MAAON,EAAOG,SAE3C,QACI,OAAOL,ID7BfY,cCkCgC,WAAyB,IAAxBZ,EAAuB,uDAAf,GAAIE,EAAW,uCACxD,OAAQA,EAAOC,MACX,KAAKlG,EACD,MAAO,CAAEmG,SAAS,GAEtB,KAAKlG,EACD,MAAO,CAAEkG,SAAS,EAAOS,SAAS,GAEtC,KAAK1G,EACD,MAAO,CAAEiG,SAAS,EAAOI,MAAON,EAAOG,SAE3C,QACI,OAAOL,ID7Cfc,cCmDgC,WAAyB,IAAxBd,EAAuB,uDAAf,GAAIE,EAAW,uCACxD,OAAQA,EAAOC,MACX,KAAK/F,EACD,MAAO,CAAEgG,SAAS,GAEtB,KAAK/F,EACD,MAAO,CAAE+F,SAAS,EAAOS,SAAS,EAAMH,QAASR,EAAOG,SAE5D,KAAK/F,EACD,MAAO,CAAE8F,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAK9F,EACD,MAAO,GAEX,QACI,OAAOyF,IDjEfe,gBCsEkC,WAAyB,IAAxBf,EAAuB,uDAAf,GAAIE,EAAW,uCAC1D,OAAQA,EAAOC,MACX,KAAK3F,EACD,MAAO,CAAE4F,SAAS,GAEtB,KAAK3F,EACD,MAAO,CAAE2F,SAAS,EAAOS,SAAS,EAAMH,QAASR,EAAOG,SAE5D,KAAK3F,EACD,MAAO,CAAE0F,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAK1F,EACD,MAAO,GAEX,QACI,OAAOqF,IDpFfgB,cCyFgC,WAAsC,IAArChB,EAAoC,uDAA5B,CAAEU,QAAS,IAAMR,EAAW,uCACrE,OAAQA,EAAOC,MACX,KAAKvF,EACD,MAAO,CAAEwF,SAAS,GAEtB,KAAKvF,EACD,MAAO,CAAEuF,SAAS,EAAOS,SAAS,EAAMH,QAASR,EAAOG,SAE5D,KAAKvF,EACD,MAAO,CAAEsF,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAKtF,EACD,MAAO,CAAE2F,QAAS,IAEtB,QACI,OAAOV,IDvGfiB,oBC6GsC,WAAyB,IAAxBjB,EAAuB,uDAAf,GAAIE,EAAW,uCAC9D,OAAQA,EAAOC,MACX,KAAKnF,EACD,MAAO,CAAEoF,SAAS,GAEtB,KAAKnF,EACD,MAAO,CAAEmF,SAAS,EAAOS,SAAS,GAEtC,KAAK3F,EACD,MAAO,CAAEkF,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAKlF,EACD,MAAO,GAEX,QACI,OAAO6E,ID3HfkB,gBCgIkC,WAAuC,IAAtClB,EAAqC,uDAA7B,CAAEC,SAAU,IAAMC,EAAW,uCACxE,OAAQA,EAAOC,MACX,KAAK/E,EACD,MAAO,CAAEgF,SAAS,EAAMH,SAAU,IAEtC,KAAK5E,EACD,MAAO,CAAE+E,SAAS,EAAOH,SAAUC,EAAOG,SAE9C,KAAK/E,EACD,MAAO,CAAE8E,SAAS,EAAOI,MAAON,EAAOG,SAE3C,QACI,OAAOL,ID1IfmB,iBE3BmC,WAA4C,IAA3CnB,EAA0C,uDAAlC,CAAEoB,cAAe,IAAMlB,EAAW,uCAC9E,OAAQA,EAAOC,MACX,KAAK5E,EACD,MAAO,CAAE6E,SAAS,EAAMgB,cAAe,IAE3C,KAAK5F,EACD,MAAO,CACH4E,SAAS,EACTgB,cAAelB,EAAOG,QAAQe,cAC9Bd,KAAMJ,EAAOG,QAAQC,KACrBC,MAAOL,EAAOG,QAAQE,OAG9B,KAAK9E,EACD,MAAO,CAAE2E,SAAS,EAAOI,MAAON,EAAOG,SAE3C,QACI,OAAOL,IFWfqB,oBELsC,WAAwD,IAAvDrB,EAAsD,uDAA9C,CAAEsB,aAAc,CAAEX,QAAS,KAAQT,EAAW,uCAC7F,OAAQA,EAAOC,MACX,KAAKzE,EACD,OAAO,aAAE0E,SAAS,GAASJ,GAE/B,KAAKrE,EACD,MAAO,CAAEyE,SAAS,EAAOkB,aAAcpB,EAAOG,SAElD,KAAKzE,EACD,MAAO,CAAEwE,SAAS,EAAOI,MAAON,EAAOG,SAE3C,QACI,OAAOL,IFNfuB,mBEWqC,WAAyB,IAAxBvB,EAAuB,uDAAf,GAAIE,EAAW,uCAC7D,OAAQA,EAAOC,MACX,KAAKtE,EACD,MAAO,CAAEuE,SAAS,GAEtB,KAAKtE,EACD,MAAO,CAAEsE,SAAS,EAAOS,SAAS,GAEtC,KAAK9E,EACD,MAAO,CAAEqE,SAAS,EAAOI,MAAON,EAAOG,SAE3C,QACI,OAAOL,IFtBfwB,mBE4BqC,WAAyB,IAAxBxB,EAAuB,uDAAf,GAAIE,EAAW,uCAC7D,OAAQA,EAAOC,MACX,KAAKnE,EACD,MAAO,CAAEoE,SAAS,GAEtB,KAAKnE,EACD,MAAO,CAAEmE,SAAS,EAAOS,SAAS,EAAMS,aAAcpB,EAAOG,SAEjE,KAAKnE,EACD,MAAO,CAAEkE,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAKlE,EACD,MAAO,GAEX,QACI,OAAO6D,IF1CfyB,mBEgDqC,WAA2C,IAA1CzB,EAAyC,uDAAjC,CAAEsB,aAAc,IAAMpB,EAAW,uCAC/E,OAAQA,EAAOC,MACX,KAAK/D,EACD,MAAO,CAAEgE,SAAS,GAEtB,KAAK/D,GACD,MAAO,CAAE+D,SAAS,EAAOS,SAAS,EAAMS,aAAcpB,EAAOG,SAEjE,KAAK/D,GACD,MAAO,CAAE8D,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAK9D,GACD,MAAO,CAAE+E,aAAc,IAE3B,QACI,OAAOtB,IF7Df0B,KG/CuB,WAA6D,IAA5D1B,EAA2D,uDAAnD,CAAE2B,UAAW,GAAIC,gBAAiB,IAAM1B,EAAW,uCACnF,OAAQA,EAAOC,MACX,KAAK3D,GACD,IAAMqF,EAAO3B,EAAOG,QACdyB,EAAY9B,EAAM2B,UAAUI,MAAK,SAAAC,GAAC,OAAIA,EAAEtB,UAAYmB,EAAKnB,WAE/D,OAAIoB,EACO,2BACA9B,GADP,IAEI2B,UAAW3B,EAAM2B,UAAUM,KAAI,SAAAD,GAAC,OAC5BA,EAAEtB,UAAYoB,EAAUpB,QAAUmB,EAAOG,OAI1C,2BACAhC,GADP,IAEI2B,UAAU,GAAD,oBAAM3B,EAAM2B,WAAZ,CAAuBE,MAI5C,KAAKpF,GACD,OAAO,2BACAuD,GADP,IAEI2B,UAAW3B,EAAM2B,UAAUO,QAAO,SAAAF,GAAC,OAAIA,EAAEtB,UAAYR,EAAOG,aAGpE,KAAK3D,GACD,OAAO,2BACAsD,GADP,IAEI4B,gBAAiB1B,EAAOG,UAGhC,KAAK1D,GACD,OAAO,2BACAqD,GADP,IAEImC,cAAejC,EAAOG,UAG9B,KAAKzD,GACD,OAAO,2BACAoD,GADP,IAEI2B,UAAW,KAGnB,QACI,OAAO3B,IHGfoC,UItB4B,WAAyB,IAAxBpC,EAAuB,uDAAf,GAAIE,EAAW,uCACpD,OAAQA,EAAOC,MACX,KAAKtD,GACD,MAAO,CAAEuD,SAAS,GAEtB,KAAKtD,GACD,MAAO,CAAEsD,SAAS,EAAOiC,SAAUnC,EAAOG,SAE9C,KAAKtD,GACD,MAAO,CAAEqD,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAKrD,GACD,MAAO,GAEX,QACI,OAAOgD,IJQfsC,aIH+B,WAAyB,IAAxBtC,EAAuB,uDAAf,GAAIE,EAAW,uCACvD,OAAQA,EAAOC,MACX,KAAKlD,GACD,MAAO,CAAEmD,SAAS,GAEtB,KAAKlD,GACD,MAAO,CAAEkD,SAAS,EAAOiC,SAAUnC,EAAOG,SAE9C,KAAKlD,GACD,MAAO,CAAEiD,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAKrD,GACD,MAAO,GAEX,QACI,OAAOgD,IJXfuC,YIiB8B,WAAmC,IAAlCvC,EAAiC,uDAAzB,CAAEwC,KAAM,IAAMtC,EAAW,uCAChE,OAAQA,EAAOC,MACX,KAAK/C,GACD,OAAO,2BAAK4C,GAAZ,IAAmBI,SAAS,IAEhC,KAAK/C,GACD,MAAO,CAAE+C,SAAS,EAAOoC,KAAMtC,EAAOG,SAE1C,KAAK/C,GACD,MAAO,CAAE8C,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAK9C,GACD,MAAO,CAAEiF,KAAM,IAGnB,QACI,OAAOxC,IJhCfyC,kBIqCoC,WAAyB,IAAxBzC,EAAuB,uDAAf,GAAIE,EAAW,uCAC5D,OAAQA,EAAOC,MACX,KAAK3C,GACD,MAAO,CAAE4C,SAAS,GAEtB,KAAK3C,GACD,MAAO,CAAE2C,SAAS,EAAOS,SAAS,EAAMwB,SAAUnC,EAAOG,SAE7D,KAAK3C,GACD,MAAO,CAAE0C,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAK1C,GACD,MAAO,GAEX,QACI,OAAOqC,IJnDf0C,SIwD2B,WAAoC,IAAnC1C,EAAkC,uDAA1B,CAAE2C,MAAO,IAAMzC,EAAW,uCAC9D,OAAQA,EAAOC,MACX,KAAKvC,GACD,MAAO,CAAEwC,SAAS,GAEtB,KAAKvC,GACD,MAAO,CAAEuC,SAAS,EAAOuC,MAAOzC,EAAOG,SAE3C,KAAKvC,GACD,MAAO,CAAEsC,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAKtC,GACD,MAAO,CAAE4E,MAAO,IAEpB,QACI,OAAO3C,IJtEf4C,WI2E6B,WAAyB,IAAxB5C,EAAuB,uDAAf,GAAIE,EAAW,uCACrD,OAAQA,EAAOC,MACX,KAAKnC,GACD,MAAO,CAAEoC,SAAS,GAEtB,KAAKnC,GACD,MAAO,CAAEmC,SAAS,EAAOS,SAAS,GAEtC,KAAK3C,GACD,MAAO,CAAEkC,SAAS,EAAOI,MAAON,EAAOG,SAE3C,QACI,OAAOL,IJtFf6C,WI2F6B,WAAmC,IAAlC7C,EAAiC,uDAAzB,CAAEwC,KAAM,IAAMtC,EAAW,uCAC/D,OAAQA,EAAOC,MACX,KAAKhC,GACD,MAAO,CAAEiC,SAAS,GAEtB,KAAKhC,GACD,MAAO,CAAEgC,SAAS,EAAOS,SAAS,GAEtC,KAAKxC,GACD,MAAO,CAAE+B,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAK/B,GACD,MAAO,CAAEkE,KAAM,IAEnB,QACI,OAAOxC,IJxGf8C,YKhC8B,WAAyB,IAAxB9C,EAAuB,uDAAf,GAAIE,EAAW,uCACtD,OAAQA,EAAOC,MACX,KAAK5B,GACD,MAAO,CACH6B,SAAS,GAGjB,KAAK5B,GACD,MAAO,CACH4B,SAAS,EACTS,SAAS,EACTkC,MAAO7C,EAAOG,SAGtB,KAAK5B,GACD,MAAO,CACH2B,SAAS,EACTI,MAAON,EAAOG,SAGtB,KAAK3B,GACD,MAAO,GAGX,QACI,OAAOsB,ILQfgD,aK0B+B,WAA6E,IAA5EhD,EAA2E,uDAAnE,CAAEI,SAAS,EAAM6C,WAAY,GAAIrB,gBAAiB,IAAM1B,EAAW,uCAC3G,OAAQA,EAAOC,MACX,KAAKxB,GACD,OAAO,2BACAqB,GADP,IAEII,SAAS,IAGjB,KAAKxB,GACD,MAAO,CACHwB,SAAS,EACT2C,MAAO7C,EAAOG,SAGtB,KAAKxB,GACD,MAAO,CACHuB,SAAS,EACTI,MAAON,EAAOG,SAItB,QACI,OAAOL,IL/CfkD,SKoD2B,WAAyB,IAAxBlD,EAAuB,uDAAf,GAAIE,EAAW,uCACnD,OAAQA,EAAOC,MACX,KAAKrB,GACD,MAAO,CACHsB,SAAS,GAGjB,KAAKrB,GACD,MAAO,CACHqB,SAAS,EACTS,SAAS,GAGjB,KAAK7B,GACD,MAAO,CACHoB,SAAS,EACTI,MAAON,EAAOG,SAGtB,KAAKpB,GACD,MAAO,GAEX,QACI,OAAOe,IL1EfmD,YK2G8B,WAAqC,IAApCnD,EAAmC,uDAA3B,CAAEoD,OAAQ,IAAMlD,EAAW,uCAClE,OAAQA,EAAOC,MACX,KAAKjB,GACD,MAAO,CACHkB,SAAS,GAGjB,KAAKjB,GACD,MAAO,CACHiB,SAAS,EACTgD,OAAQlD,EAAOG,SAGvB,KAAKjB,GACD,MAAO,CACHgB,SAAS,EACTI,MAAON,EAAOG,SAGtB,KAAKhB,GACD,MAAO,CACH+D,OAAQ,IAGhB,QACI,OAAOpD,ILnIfqD,UKyI4B,WAAqC,IAApCrD,EAAmC,uDAA3B,CAAEoD,OAAQ,IAAMlD,EAAW,uCAChE,OAAQA,EAAOC,MACX,KAAKb,GACD,MAAO,CACHc,SAAS,GAGjB,KAAKb,GACD,MAAO,CACHa,SAAS,EACTgD,OAAQlD,EAAOG,SAGvB,KAAKb,GACD,MAAO,CACHY,SAAS,EACTI,MAAON,EAAOG,SAEtB,QACI,OAAOL,IL3JfsD,aK6E+B,WAAyB,IAAxBtD,EAAuB,uDAAf,GAAIE,EAAW,uCACvD,OAAQA,EAAOC,MACX,KAAKV,GACD,MAAO,CACHW,SAAS,GAGjB,KAAKV,GACD,MAAO,CACHU,SAAS,EACTS,SAAS,GAGjB,KAAKlB,GACD,MAAO,CACHS,SAAS,EACTI,MAAON,EAAOG,SAGtB,KAAKT,GACD,MAAO,GAEX,QACI,OAAOI,MLhGbuD,GAAuBC,aAAaC,QAAQ,aAC9CC,KAAKC,MAAMH,aAAaC,QAAQ,cAAgB,GAE9CG,GAAsBJ,aAAaC,QAAQ,YAC7CC,KAAKC,MAAMH,aAAaC,QAAQ,aAAe,KAG7CI,GAA6BL,aAAaC,QAAQ,mBACpDC,KAAKC,MAAMH,aAAaC,QAAQ,oBAAsB,GAMpDK,IAJ2BN,aAAaC,QAAQ,oBAClDC,KAAKC,MAAMH,aAAaC,QAAQ,oBAGf,CACjB/B,KAAM,CACFC,UAAW4B,GACX3B,gBAAiBiC,IAErBzB,UAAW,CAAEC,SAAUuB,MAGrBG,GAAa,CAACC,KAKLC,GAHDC,sBAAYrE,GAASiE,GAC/BK,8BAAoBC,kBAAe,WAAf,EAAmBL,M,mHMjE5BM,OAjCf,WAAsB,IAAD,EACaC,mBAAS,IADtB,oBACVC,EADU,KACDC,EADC,KAGbC,EAAUC,eAUd,OACI,eAACC,GAAA,EAAD,CAAMC,SATY,SAACC,GACnBA,EAAEC,iBACEP,EACAE,EAAQM,KAAR,oBAA0BR,EAA1B,YAEAE,EAAQM,KAAKN,EAAQM,KAAKN,EAAQO,SAASC,YAIhBC,QAAM,EAArC,UACI,cAACP,GAAA,EAAKQ,QAAN,CACIhF,KAAK,OACLiF,KAAK,IACLC,SAAU,SAACR,GAAD,OAAOL,EAAWK,EAAES,OAAOC,QACrCC,UAAU,oBAGd,cAACC,GAAA,EAAD,CACItF,KAAK,SACLuF,QAAQ,kBACRF,UAAU,MAHd,wB,gDCmGCG,GAAiB,SAACC,GAAD,gDAAQ,WAAOC,EAAUC,GAAjB,wBAAAC,EAAA,sEAE9BF,EAAS,CACL1F,KAAM/C,KAHoB,EAQ1B0I,IADazD,EAPa,EAO1BD,UAAaC,SAGX2D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAbZ,SAiBPC,KAAMC,IAAN,qBACLT,EADK,KAEnBI,GAnB0B,gBAiBtBM,EAjBsB,EAiBtBA,KAKRT,EAAS,CACL1F,KAAM9C,GACNgD,QAASiG,IAxBiB,kDA6B9BT,EAAS,CACL1F,KAAM7C,GACN+C,QAAS,KAAMkG,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAjCc,0DAAR,yDCrCfC,OAjFf,WAEI,IACQrE,EADUsE,aAAY,SAAA3G,GAAK,OAAIA,EAAMoC,aACrCC,SAEFwD,EAAWe,cAMjB,OACI,iCACI,cAACC,GAAA,EAAD,CAAQC,GAAG,QAAQpB,QAAQ,QAAQqB,OAAO,KAAKC,kBAAgB,EAA/D,SACI,eAACC,GAAA,EAAD,WACI,cAAC,iBAAD,CAAeC,GAAG,IAAlB,SACI,cAACL,GAAA,EAAOM,MAAR,6BAGJ,cAACN,GAAA,EAAOO,OAAR,CAAeC,gBAAc,qBAC7B,eAACR,GAAA,EAAOS,SAAR,CAAiB1B,GAAG,mBAApB,UACI,cAAC,GAAD,IACA,eAAC2B,GAAA,EAAD,CAAK/B,UAAU,UAAf,UACI,cAAC,iBAAD,CAAe0B,GAAG,cAAlB,SACI,eAACK,GAAA,EAAIC,KAAL,WAAW,mBAAGhC,UAAU,0BAAxB,eAGJ,cAAC,iBAAD,CAAe0B,GAAG,QAAlB,SACI,eAACK,GAAA,EAAIC,KAAL,WAAW,mBAAGhC,UAAU,yBAAxB,aAGJ,cAAC,iBAAD,CAAe0B,GAAG,SAAlB,SACI,eAACK,GAAA,EAAIC,KAAL,WAAW,mBAAGhC,UAAU,gBAAxB,iBAGHnD,EACG,eAACoF,GAAA,EAAD,CAAaC,MAAOrF,EAAS+C,KAAMQ,GAAG,WAAtC,UACI,cAAC,iBAAD,CAAesB,GAAG,WAAlB,SACI,cAACO,GAAA,EAAYE,KAAb,wBAGJ,cAACF,GAAA,EAAYE,KAAb,CAAkBC,QAlC5B,WAClB/B,GD4DoB,SAACA,GACzBrC,aAAaqE,WAAW,YACxBhC,EAAS,CAAE1F,KAAMnD,KACjB6I,EAAS,CAAE1F,KAAM5C,KACjBsI,EAAS,CAAE1F,KAAMd,KACjBwG,EAAS,CAAE1F,KAAMpC,SChCe,uBAIA,cAAC,iBAAD,CAAemJ,GAAG,SAAlB,SACI,eAACK,GAAA,EAAIC,KAAL,WAAU,mBAAGhC,UAAU,gBAAvB,aAKXnD,GAAYA,EAASyF,SAClB,eAACL,GAAA,EAAD,CAAaC,MAAM,QAAQ9B,GAAG,aAA9B,UACI,cAAC,iBAAD,CAAesB,GAAG,kBAAlB,SACI,cAACO,GAAA,EAAYE,KAAb,sBAGJ,cAAC,iBAAD,CAAeT,GAAG,qBAAlB,SACI,cAACO,GAAA,EAAYE,KAAb,yBAGJ,cAAC,iBAAD,CAAeT,GAAG,mBAAlB,SACI,cAACO,GAAA,EAAYE,KAAb,uBAGJ,cAAC,iBAAD,CAAeT,GAAG,gCAAlB,SACI,cAACO,GAAA,EAAYE,KAAb,qD,SCmCzBI,OAzGf,WACE,OACE,eAAC,KAAD,CAAWvC,UAAU,uCAAuCwC,MAAO,CAAEC,gBAAiB,WAAtF,UACE,0BAASzC,UAAU,6EAAnB,UACE,qBAAKA,UAAU,yBAAf,SACE,+EAGF,gCACE,mBAAG0C,KAAK,GAAG1C,UAAU,kBAArB,SACE,mBAAGA,UAAU,wBAEf,mBAAG0C,KAAK,GAAG1C,UAAU,kBAArB,SACE,mBAAGA,UAAU,qBAEf,mBAAG0C,KAAK,GAAG1C,UAAU,kBAArB,SACE,mBAAGA,UAAU,oBAEf,mBAAG0C,KAAK,GAAG1C,UAAU,kBAArB,SACE,mBAAGA,UAAU,6BAKnB,yBAASA,UAAU,GAAnB,SACE,qBAAKA,UAAU,2CAAf,SACE,sBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,0CAAf,UACE,qBAAIA,UAAU,8BAA8BwC,MAAO,CAAEG,MAAO,WAA5D,UACE,mBAAG3C,UAAU,oBADf,kBAGA,qIAKF,sBAAKA,UAAU,qDAAf,UACE,oBAAIA,UAAU,8BAA8BwC,MAAO,CAAEG,MAAO,WAA5D,sBACA,4BACE,mBAAGD,KAAK,qCAAqC1C,UAAU,aAAvD,+BAIF,4BACE,mBAAG0C,KAAK,uCAAuC1C,UAAU,aAAzD,+BAIF,4BACE,mBAAG0C,KAAK,uCAAuC1C,UAAU,aAAzD,+BAIF,4BACE,mBAAG0C,KAAK,qCAAqC1C,UAAU,aAAvD,kCAMJ,sBAAKA,UAAU,0CAAf,UACE,oBAAIA,UAAU,8BAA8BwC,MAAO,CAAEG,MAAO,WAA5D,0BACA,4BACE,mBAAGD,KAAK,cAAc1C,UAAU,aAAhC,sBAIF,4BACE,mBAAG0C,KAAK,QAAQ1C,UAAU,aAA1B,oBAIF,4BACE,mBAAG0C,KAAK,SAAS1C,UAAU,aAA3B,2BAMJ,sBAAKA,UAAU,kDAAf,UACE,oBAAIA,UAAU,8BAA8BwC,MAAO,CAAEG,MAAO,WAA5D,qBACA,8BACE,mBAAG3C,UAAU,qBADf,yBAGA,8BACE,mBAAGA,UAAU,yBADf,2BAGA,8BACE,mBAAGA,UAAU,sBADf,wBAGA,8BACE,mBAAGA,UAAU,sBADf,kCAQR,qBAAKA,UAAU,kBAAkBwC,MAAO,CAAEC,gBAAiB,uBAA3D,kD,6BC/BSG,OApEf,YAAyC,IAAvB7C,EAAsB,EAAtBA,MAAO8C,EAAe,EAAfA,KAAMF,EAAS,EAATA,MAC3B,OACI,sBAAK3C,UAAU,SAAf,UACI,+BACI,mBAAGwC,MAAO,CAAEG,SAAS3C,UACjBD,GAAS,EACH,cACAA,GAAS,GACL,uBACA,kBAMlB,+BACI,mBAAGyC,MAAO,CAAEG,SAAS3C,UACjBD,GAAS,EACH,cACAA,GAAS,IACL,uBACA,kBAMlB,+BACI,mBAAGyC,MAAO,CAAEG,SAAS3C,UACjBD,GAAS,EACH,cACAA,GAAS,IACL,uBACA,kBAMlB,+BACI,mBAAGyC,MAAO,CAAEG,SAAS3C,UACjBD,GAAS,EACH,cACAA,GAAS,IACL,uBACA,kBAMlB,+BACI,mBAAGyC,MAAO,CAAEG,SAAS3C,UACjBD,GAAS,EACH,cACAA,GAAS,IACL,uBACA,kBAMlB,+BAAO8C,GAAQA,QC1BZC,OAlCf,YAA+B,IAAZ5H,EAAW,EAAXA,QACT6H,EAAY,IAAIC,KAAKC,aAAa,QAAS,CAC7CT,MAAO,WACPU,SAAU,QAGd,OACI,eAACC,GAAA,EAAD,CAAMnD,UAAU,mBAAhB,UACI,cAAC,QAAD,CAAM0B,GAAE,mBAAcxG,EAAQkI,KAA9B,SACI,cAACD,GAAA,EAAKE,IAAN,CAAUC,IAAKpI,EAAQqI,UAG3B,eAACJ,GAAA,EAAKK,KAAN,WACI,cAAC,QAAD,CAAM9B,GAAE,mBAAcxG,EAAQkI,KAA9B,SACI,cAACD,GAAA,EAAKM,MAAN,CAAYC,GAAG,MAAf,SACI,iCAASxI,EAAQ0E,WAIzB,cAACuD,GAAA,EAAKQ,KAAN,CAAWD,GAAG,MAAd,SACI,qBAAK1D,UAAU,OAAf,SACI,cAAC,GAAD,CAAQD,MAAO7E,EAAQ0I,OAAQf,KAAI,UAAK3H,EAAQ2I,WAAb,YAAmClB,MAAO,gBAKrF,cAACQ,GAAA,EAAKQ,KAAN,CAAWD,GAAG,KAAd,SACKX,EAAUe,OAAO5I,EAAQ6I,gB,UCZ/BC,OAjBf,WACI,OACI,cAACC,GAAA,EAAD,CACIC,UAAU,SACVC,KAAK,SACL3B,MAAO,CACH4B,OAAQ,QACRC,MAAO,QACPC,OAAQ,OACRC,QAAS,SAPjB,SAUI,sBAAMvE,UAAU,UAAhB,2B,UCJGwE,OARf,YAAyC,IAAtBtE,EAAqB,EAArBA,QAASuE,EAAY,EAAZA,SACxB,OACI,cAACC,GAAA,EAAD,CAAOxE,QAASA,EAAhB,SACKuE,K,UCqBEE,OAvBf,YAAmE,IAA/C5J,EAA8C,EAA9CA,MAAOD,EAAuC,EAAvCA,KAAuC,IAAjCiE,eAAiC,MAAvB,GAAuB,MAAnBuD,eAAmB,SAK9D,OAJIvD,IACAA,EAAUA,EAAQ6F,MAAM,aAAa,GAAGA,MAAM,KAAK,IAG/C7J,EAAQ,GACZ,cAAC8J,GAAA,EAAD,UACK,aAAIC,MAAM/J,GAAOgK,QAAQtI,KAAI,SAACD,GAAD,OAC1B,cAAC,iBAAD,CAEIkF,GAAKY,EAAD,sCAEiCvD,EAFjC,iBAEiDvC,EAAI,GAFrD,oBACauC,EADb,iBAC6BvC,EAAI,GAHzC,SAOI,cAACqI,GAAA,EAAW1C,KAAZ,CAAiB6C,OAAQxI,EAAI,IAAM1B,EAAnC,SAA0C0B,EAAI,KANzCA,EAAI,S,oBCyBhByI,GAAe,eAAClG,EAAD,uDAAW,GAAX,gDAAkB,WAAOsB,GAAP,kBAAAE,EAAA,sEAEtCF,EAAS,CAAE1F,KAAMxG,IAFqB,SAIfyM,KAAMC,IAAN,uBAA0B9B,IAJX,gBAI9B+B,EAJ8B,EAI9BA,KAERT,EAAS,CACL1F,KAAMvG,EACNyG,QAASiG,IARyB,gDAYtCT,EAAS,CACL1F,KAAMtG,EACNwG,QAAS,KAAMkG,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAhBsB,yDAAlB,uDA2CfiE,GAAqB,SAAC9E,GAAD,gDAAQ,WAAOC,GAAP,kBAAAE,EAAA,sEAElCF,EAAS,CAAE1F,KAAMrG,IAFiB,SAIXsM,KAAMC,IAAN,wBAA2BT,IAJhB,gBAI1BU,EAJ0B,EAI1BA,KAERT,EAAS,CACL1F,KAAMpG,EACNsG,QAASiG,IARqB,gDAYlCT,EAAS,CACL1F,KAAMnG,EACNqG,QAAS,KAAMkG,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAhBkB,yDAAR,uDCrCnBkE,OApCf,WACI,IAAM9E,EAAWe,cAEX1F,EAAkByF,aAAY,SAAA3G,GAAK,OAAIA,EAAMkB,mBAC3CV,EAA6BU,EAA7BV,MAAOJ,EAAsBc,EAAtBd,QAASH,EAAaiB,EAAbjB,SAExB2K,qBAAU,WACN/E,ED4CuB,yCAAM,WAAOA,GAAP,kBAAAE,EAAA,sEAE7BF,EAAS,CAAE1F,KAAM/E,IAFY,SAINgL,KAAMC,IAAN,sBAJM,gBAIrBC,EAJqB,EAIrBA,KAERT,EAAS,CACL1F,KAAM9E,EACNgF,QAASiG,IARgB,gDAY7BT,EAAS,CACL1F,KAAM7E,EACN+E,QAAS,KAAMkG,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAhBa,yDAAN,yDC3CxB,CAACZ,IAEJ,IAAM0C,EAAY,IAAIC,KAAKC,aAAa,QAAS,CAC7CT,MAAO,WACPU,SAAU,QAGd,OAAQtI,EAAU,cAAC,GAAD,IACZI,EACI,cAAC,GAAD,CAASkF,QAAQ,SAAjB,SAA2BlF,IAEzB,cAACqK,GAAA,EAAD,CAAUC,MAAM,QAAQtF,UAAU,UAAlC,SACKvF,EAASgC,KAAI,SAAAvB,GAAO,OACjB,cAACmK,GAAA,EAASlD,KAAV,UACI,eAAC,QAAD,CAAMT,GAAE,mBAAcxG,EAAQkI,KAA9B,UACI,cAACmC,GAAA,EAAD,CAAOjC,IAAKpI,EAAQqI,MAAOiC,IAAKtK,EAAQ0E,KAAM6F,OAAK,IACnD,cAACJ,GAAA,EAASK,QAAV,CAAkB1F,UAAU,mBAA5B,SACI,+BAAK9E,EAAQ0E,KAAb,KAAqBmD,EAAUe,OAAO5I,EAAQ6I,OAA9C,aAJQ7I,EAAQkI,WCsBrCuC,OAxCf,YAAkC,IAAZ1G,EAAW,EAAXA,QACZoB,EAAWe,cACX7G,EAAc4G,aAAY,SAAA3G,GAAK,OAAIA,EAAMD,eACvCS,EAA0CT,EAA1CS,MAAOJ,EAAmCL,EAAnCK,QAASH,EAA0BF,EAA1BE,SAAUK,EAAgBP,EAAhBO,KAAMC,EAAUR,EAAVQ,MAEpCgE,EAAUE,EAAQO,SAASoG,OAO/B,OALAR,qBAAU,WACN/E,EAAS4E,GAAalG,MAEvB,CAACsB,EAAUtB,IAGN,sBAAKiB,UAAU,MAAf,WACMjB,GAAW,cAAC,GAAD,IAEb,iDACCnE,EAAU,cAAC,GAAD,IACLI,EAAQ,cAAC,GAAD,CAASkF,QAAQ,SAAjB,SAA2BlF,IAEjC,gCACI,cAAC6K,GAAA,EAAD,CAAK7F,UAAU,MAAf,SACKvF,EAASiC,QAAO,SAAAxB,GAAY,MAA2B,UAApBA,EAAQ4K,YAC3CrJ,KAAI,SAAAvB,GACD,OACI,cAAC6K,GAAA,EAAD,CAAuBC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAjD,SACI,cAAC,GAAD,CAASjL,QAASA,KADZA,EAAQkI,UAQ9B,cAAC,GAAD,CAAUtI,KAAMA,EAAMC,MAAOA,EAAOgE,QAASA,W,UC2L1DqH,OA7Nf,YAA4C,IAAnBC,EAAkB,EAAlBA,MAAOpH,EAAW,EAAXA,QAAW,EACjBH,mBAAS,GADQ,oBAChCwH,EADgC,KAC3BC,EAD2B,OAEXzH,mBAAS,GAFE,oBAEhC8E,EAFgC,KAExB4C,EAFwB,OAGT1H,mBAAS,IAHA,oBAGhC2H,EAHgC,KAGvBC,EAHuB,KAKjCrG,EAAWe,cAEXnG,EAAiBkG,aAAY,SAAA3G,GAAK,OAAIA,EAAMS,kBAC1CL,EAA4BK,EAA5BL,QAASI,EAAmBC,EAAnBD,MAAOE,EAAYD,EAAZC,QAGhB2B,EADUsE,aAAY,SAAA3G,GAAK,OAAIA,EAAMoC,aACrCC,SAEFpB,EAAsB0F,aAAY,SAAA3G,GAAK,OAAIA,EAAMiB,uBAE1CkL,EAGTlL,EAHAb,QACOgM,EAEPnL,EAFAT,MACS6L,EACTpL,EADAJ,QAGJ+J,qBAAU,WACFyB,IACAL,EAAU,GACVE,EAAW,IACXrG,EAAS,CAAE1F,KAAMhF,KAGrB0K,EAAS6E,GAAmBmB,EAAMS,OAAO1G,OAE1C,CAACC,EAAUgG,EAAOQ,IAErB,IAcM9D,EAAY,IAAIC,KAAKC,aAAa,QAAS,CAC7CT,MAAO,WACPU,SAAU,QAGd,OACI,gCACI,cAAC,QAAD,CAAMxB,GAAG,IAAI1B,UAAU,qBAAvB,qBACCpF,EACG,cAAC,GAAD,IACEI,EACI,cAAC,GAAD,CAASkF,QAAQ,SAAjB,SAA2BlF,IAEzB,sBAAKgF,UAAU,MAAf,UACI,eAAC6F,GAAA,EAAD,WACI,cAACE,GAAA,EAAD,CAAKE,GAAI,EAAT,SACI,cAACV,GAAA,EAAD,CAAOjC,IAAKpI,EAAQqI,MAAOiC,IAAKtK,EAAQ0E,KAAM6F,OAAK,MAGvD,cAACM,GAAA,EAAD,CAAKE,GAAI,EAAT,SACI,eAACc,GAAA,EAAD,CAAW7G,QAAQ,QAAnB,UACI,cAAC6G,GAAA,EAAU5E,KAAX,UACI,6BAAKjH,EAAQ0E,SAGjB,cAACmH,GAAA,EAAU5E,KAAX,UACI,cAAC,GAAD,CAAQpC,MAAO7E,EAAQ0I,OAAQf,KAAI,UAAK3H,EAAQ2I,WAAb,YAAmClB,MAAO,cAGjF,eAACoE,GAAA,EAAU5E,KAAX,qBACYY,EAAUe,OAAO5I,EAAQ6I,UAGrC,eAACgD,GAAA,EAAU5E,KAAX,2BACkBjH,EAAQ8L,oBAMlC,cAACjB,GAAA,EAAD,CAAKE,GAAI,EAAT,SACI,cAAC9C,GAAA,EAAD,UACI,eAAC4D,GAAA,EAAD,CAAW7G,QAAQ,QAAnB,UACI,cAAC6G,GAAA,EAAU5E,KAAX,UACI,eAAC0D,GAAA,EAAD,WACI,cAACE,GAAA,EAAD,qBACA,cAACA,GAAA,EAAD,UACI,iCAAShD,EAAUe,OAAO5I,EAAQ6I,gBAI9C,cAACgD,GAAA,EAAU5E,KAAX,UACI,eAAC0D,GAAA,EAAD,WACI,cAACE,GAAA,EAAD,sBACA,cAACA,GAAA,EAAD,UACK7K,EAAQ+L,aAAe,EAAI,WAAa,sBAKpD/L,EAAQ+L,aAAe,GACpB,cAACF,GAAA,EAAU5E,KAAX,UACI,eAAC0D,GAAA,EAAD,WACI,cAACE,GAAA,EAAD,kBACA,cAACA,GAAA,EAAD,CAAKmB,GAAG,OAAOlH,UAAU,OAAzB,SACI,cAACb,GAAA,EAAKQ,QAAN,CACI+D,GAAG,SACH3D,MAAOuG,EACPzG,SAAU,SAACR,GAAD,OAAOkH,EAAOlH,EAAES,OAAOC,QAHrC,SAOQ,aAAI+E,MAAM5J,EAAQ+L,cAAclC,QAAQtI,KAAI,SAACD,GAAD,OACxC,wBAAoBuD,MAAOvD,EAAI,EAA/B,SACKA,EAAI,GADIA,EAAI,eAa7C,cAACuK,GAAA,EAAU5E,KAAX,UACI,cAAClC,GAAA,EAAD,CACImC,QAtGvB,WACrBnD,EAAQM,KAAR,gBAAsB8G,EAAMS,OAAO1G,GAAnC,gBAA6CkG,KAsGDtG,UAAU,YACVmH,SAAkC,GAAxBjM,EAAQ+L,aAClBtM,KAAK,SAJT,qCAapB,cAACkL,GAAA,EAAD,UACI,eAACE,GAAA,EAAD,CAAKE,GAAI,EAAT,UACI,oBAAIjG,UAAU,MAAd,qBAC4B,IAA3B9E,EAAQC,QAAQiM,QAAgB,cAAC,GAAD,CAASlH,QAAQ,OAAjB,wBAEjC,eAAC6G,GAAA,EAAD,CAAW7G,QAAQ,QAAnB,UACKhF,EAAQC,QAAQsB,KAAI,SAAC4K,GAAD,OACjB,eAACN,GAAA,EAAU5E,KAAX,WACI,iCAASkF,EAAOzH,OAChB,cAAC,GAAD,CAAQG,MAAOsH,EAAOzD,OAAQjB,MAAM,YACpC,4BAAI0E,EAAOC,UAAUC,UAAU,EAAG,MAClC,4BAAIF,EAAOZ,YAJMY,EAAOjE,QAQhC,eAAC2D,GAAA,EAAU5E,KAAX,WACI,gDAECwE,GAAwB,cAAC,GAAD,IACxBE,GAAwB,cAAC,GAAD,CAAS3G,QAAQ,UAAjB,8BACxB0G,GAAsB,cAAC,GAAD,CAAS1G,QAAQ,SAAjB,SAA2B0G,IAEjD/J,EACG,eAACsC,GAAA,EAAD,CAAMC,SArI5B,SAACC,GH2NQ,IAACmI,EAAWH,EG1NvChI,EAAEC,iBACFe,GHyN4BmH,EGxNxBnB,EAAMS,OAAO1G,GHwNsBiH,EGxNlB,CACjBzD,SACA6C,WHsNuB,yCAAuB,WAAOpG,EAAUC,GAAjB,wBAAAC,EAAA,sEAElDF,EAAS,CACL1F,KAAMnF,IAHwC,EAQ9C8K,IADazD,EAPiC,EAO9CD,UAAaC,SAGX2D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAbQ,SAiB3BC,KAAM6G,KAAN,wBACFD,EADE,aAEnBH,EACA7G,GApB8C,gBAiB1CM,EAjB0C,EAiB1CA,KAKRT,EAAS,CACL1F,KAAMlF,EACNoF,QAASiG,IAxBqC,kDA8BlDT,EAAS,CACL1F,KAAMjF,EACNmF,QAAS,KAAMkG,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAlCkC,0DAAvB,2DGtFa,UACI,eAAC9B,GAAA,EAAKuI,MAAN,CAAYC,UAAU,SAAtB,UACI,cAACxI,GAAA,EAAKyI,MAAN,qBACA,eAACzI,GAAA,EAAKQ,QAAN,CACI+D,GAAG,SACH3D,MAAO6D,EACP/D,SAAU,SAACR,GAAD,OAAOmH,EAAUnH,EAAES,OAAOC,QAHxC,UAKI,wBAAQA,MAAM,GAAd,uBACA,wBAAQA,MAAM,IAAd,sBACA,wBAAQA,MAAM,IAAd,sBACA,wBAAQA,MAAM,IAAd,sBACA,wBAAQA,MAAM,IAAd,2BACA,wBAAQA,MAAM,IAAd,iCAIR,eAACZ,GAAA,EAAKuI,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACxI,GAAA,EAAKyI,MAAN,qBACA,cAACzI,GAAA,EAAKQ,QAAN,CACI+D,GAAG,WACHmE,IAAI,IACJ9H,MAAO0G,EACP5G,SAAU,SAACR,GAAD,OAAOqH,EAAWrH,EAAES,OAAOC,aAI7C,cAACE,GAAA,EAAD,CACIkH,SAAUR,EACVhM,KAAK,SACLuF,QAAQ,UAHZ,uBAUA,eAAC,GAAD,CAASA,QAAQ,OAAjB,oBAA+B,cAAC,QAAD,CAAMwB,GAAG,SAAT,mBAA/B,0CC7MvCoG,GAAY,SAAC1H,EAAIkG,GAAL,gDAAa,WAAOjG,EAAUC,GAAjB,kBAAAC,EAAA,sEACXK,KAAMC,IAAN,wBAA2BT,IADhB,gBAC1BU,EAD0B,EAC1BA,KAERT,EAAS,CACL1F,KAAM3D,GACN6D,QAAS,CACLK,QAAS4F,EAAKsC,IACdxD,KAAMkB,EAAKlB,KACX2D,MAAOzC,EAAKyC,MACZQ,MAAOjD,EAAKiD,MACZkD,aAAcnG,EAAKmG,aACnBX,SAGRtI,aAAa+J,QAAQ,YAAa7J,KAAK8J,UAAU1H,IAAWpE,KAAKC,YAd/B,2CAAb,yDCkHV8L,OArHf,YAAmD,IAA7B5B,EAA4B,EAA5BA,MAAO7G,EAAqB,EAArBA,SAAUP,EAAW,EAAXA,QAC7BuI,EAAYnB,EAAMS,OAAO1G,GACzBkG,EAAM9G,EAASoG,OAASsC,OAAO1I,EAASoG,OAAOhB,MAAM,KAAK,IAAM,EAChEvE,EAAWe,cAGTjF,EADKgF,aAAY,SAAA3G,GAAK,OAAIA,EAAM0B,QAChCC,UAERiJ,qBAAU,WACFoC,GACAnH,EAASyH,GAAUN,EAAWlB,MAEnC,CAACjG,EAAUmH,EAAWlB,IAGzB,IAAM6B,EAAwB,SAAC/H,GAC3BC,EDMsB,SAACD,GAAD,OAAQ,SAACC,EAAUC,GAC7CD,EAAS,CACL1F,KAAM1D,GACN4D,QAASuF,IAGbpC,aAAa+J,QAAQ,YAAa7J,KAAK8J,UAAU1H,IAAWpE,KAAKC,aCZpDiM,CAAehI,KAOtB2C,EAAY,IAAIC,KAAKC,aAAa,QAAS,CAC7CT,MAAO,WACPU,SAAU,QAGd,OACI,eAAC2C,GAAA,EAAD,WACI,eAACE,GAAA,EAAD,CAAKE,GAAI,EAAT,UACI,+CACsB,IAArB9J,EAAUiL,OACP,eAAC,GAAD,CAASlH,QAAQ,OAAjB,gCACuB,cAAC,QAAD,CAAMwB,GAAG,IAAT,wBAGnB,cAACqF,GAAA,EAAD,CAAW7G,QAAQ,QAAnB,SACK/D,EAAUM,KAAI,SAAAJ,GAAI,OACf,cAAC0K,GAAA,EAAU5E,KAAX,UACI,eAAC0D,GAAA,EAAD,WACI,cAACE,GAAA,EAAD,CAAKE,GAAI,EAAT,SACuB,WAAlB5J,EAAKyJ,SACF,cAACP,GAAA,EAAD,CAAOjC,IAAI,6BAA6BkC,IAAKnJ,EAAKuD,KAAM6F,OAAK,EAAC4C,SAAO,IAEjE,cAAC9C,GAAA,EAAD,CAAOjC,IAAKjH,EAAKkH,MAAOiC,IAAKnJ,EAAKuD,KAAM6F,OAAK,EAAC4C,SAAO,MAGjE,cAACtC,GAAA,EAAD,CAAKE,GAAI,EAAT,SACI,cAAC,QAAD,CAAMvE,GAAE,mBAAcrF,EAAKnB,SAA3B,SAAuCmB,EAAKuD,SAGhD,cAACmG,GAAA,EAAD,CAAKE,GAAI,EAAT,SACKlD,EAAUe,OAAOzH,EAAK0H,SAG3B,cAACgC,GAAA,EAAD,CAAKE,GAAI,EAAT,SACI,cAAC9G,GAAA,EAAKQ,QAAN,CACI+D,GAAG,SACH3D,MAAO1D,EAAKiK,IACZzG,SAAU,SAACR,GAAD,OAAOgB,EAASyH,GAAUzL,EAAKnB,QAASgN,OAAO7I,EAAES,OAAOC,UAHtE,SAOQ,aAAI+E,MAAMzI,EAAK4K,cAAclC,QAAQtI,KAAI,SAACD,GAAD,OACrC,wBAAoBuD,MAAOvD,EAAI,EAA/B,SACKA,EAAI,GADIA,EAAI,UASjC,cAACuJ,GAAA,EAAD,CAAKE,GAAI,EAAT,SACI,cAAChG,GAAA,EAAD,CACItF,KAAK,SACLuF,QAAQ,QACRkC,QAAS,kBAAM+F,EAAsB9L,EAAKnB,UAH9C,SAKI,mBAAG8E,UAAU,yBAzCR3D,EAAKnB,iBAmD9C,cAAC6K,GAAA,EAAD,CAAKE,GAAI,EAAT,SACI,eAAC9C,GAAA,EAAD,WACI,cAAC4D,GAAA,EAAD,CAAW7G,QAAQ,QAAnB,SACI,eAAC6G,GAAA,EAAU5E,KAAX,WACI,4CAAehG,EAAUmM,QAAO,SAACC,EAAKlM,GAAN,OAAekM,EAAMlM,EAAKiK,MAAK,GAA/D,aACCvD,EAAUe,OAAO3H,EAAUmM,QAAO,SAACC,EAAKlM,GAAN,OAAekM,EAAMlM,EAAKiK,IAAMjK,EAAK0H,QAAO,SAIvF,cAACgD,GAAA,EAAU5E,KAAX,UACI,cAAClC,GAAA,EAAD,CACItF,KAAK,SACLqF,UAAU,YACVmH,SAA+B,IAArBhL,EAAUiL,OACpBhF,QArFA,WACpBnD,EAAQM,KAAK,6BAgFG,4CC5FTiJ,OAZf,YAAsC,IAAb/D,EAAY,EAAZA,SACrB,OACI,cAAChD,GAAA,EAAD,UACI,cAACoE,GAAA,EAAD,CAAK7F,UAAU,4BAAf,SACI,cAAC+F,GAAA,EAAD,CAAKmB,GAAI,GAAIjB,GAAI,EAAjB,SACKxB,SCuENgE,OAtEf,YAA6C,IAAtBjJ,EAAqB,EAArBA,SAAUP,EAAW,EAAXA,QAAW,EACdH,mBAAS,IADK,oBACjC4J,EADiC,KAC1BC,EAD0B,OAER7J,mBAAS,IAFD,oBAEjC8J,EAFiC,KAEvBC,EAFuB,KAIlCxI,EAAWe,cAEX0H,EAAWtJ,EAASoG,OAASpG,EAASoG,OAAOhB,MAAM,KAAK,GAAK,IAE7DhI,EAAYuE,aAAY,SAAA3G,GAAK,OAAIA,EAAMoC,aACrC5B,EAA6B4B,EAA7B5B,MAAOJ,EAAsBgC,EAAtBhC,QAASiC,EAAaD,EAAbC,SAaxB,OAXAuI,qBAAU,WACFvI,GACAoC,EAAQM,KAAKuJ,KAElB,CAAC7J,EAASpC,EAAUiM,IAQnB,eAAC,GAAD,WACI,yCACC9N,GAAS,cAAC,GAAD,CAASkF,QAAQ,SAAjB,SAA2BlF,IACpCJ,GAAW,cAAC,GAAD,IACZ,eAACuE,GAAA,EAAD,CAAMC,SAVQ,SAACC,GACnBA,EAAEC,iBACFe,EfWa,SAACqI,EAAOE,GAAR,gDAAqB,WAAOvI,GAAP,oBAAAE,EAAA,sEAElCF,EAAS,CACL1F,KAAMtD,KAGJmJ,EAAS,CACXC,QAAS,CACL,eAAgB,qBARU,SAYXG,KAAM6G,KACzB,oBACA,CAAE,SAAYiB,EAAO,SAAYE,GACjCpI,GAf8B,gBAY1BM,EAZ0B,EAY1BA,KAMRT,EAAS,CACL1F,KAAMrD,GACNuD,QAASiG,IAGb9C,aAAa+J,QAAQ,WAAY7J,KAAK8J,UAAUlH,IAvBd,kDA0BlCT,EAAS,CACL1F,KAAMpD,GACNsD,QAAS,KAAMkG,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UA9BkB,0DAArB,sDeXJ8H,CAAML,EAAOE,KAQlB,UAEI,eAACzJ,GAAA,EAAKuI,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACxI,GAAA,EAAKyI,MAAN,4BACA,cAACzI,GAAA,EAAKQ,QAAN,CACIhF,KAAK,QACLqO,YAAY,cACZjJ,MAAO2I,EACP7I,SAAU,SAACR,GAAD,OAAOsJ,EAAStJ,EAAES,OAAOC,aAM3C,eAACZ,GAAA,EAAKuI,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACxI,GAAA,EAAKyI,MAAN,uBACA,cAACzI,GAAA,EAAKQ,QAAN,CACIhF,KAAK,WACLqO,YAAY,iBACZjJ,MAAO6I,EACP/I,SAAU,SAACR,GAAD,OAAOwJ,EAAYxJ,EAAES,OAAOC,aAK9C,cAACE,GAAA,EAAD,CAAQtF,KAAK,SAASuF,QAAQ,UAA9B,wBAKJ,cAAC2F,GAAA,EAAD,CAAK7F,UAAU,OAAf,SACI,eAAC+F,GAAA,EAAD,4BACkB,cAAC,QAAD,CACVrE,GAAIoH,EAAQ,6BAAyBA,GAAa,YADxC,+BC+CnBG,OA1Gf,YAAgD,IAAtBzJ,EAAqB,EAArBA,SAAUP,EAAW,EAAXA,QAAW,EAEnBH,mBAAS,IAFU,oBAEpCc,EAFoC,KAE9BsJ,EAF8B,OAGjBpK,mBAAS,IAHQ,oBAGpC4J,EAHoC,KAG7BC,EAH6B,OAIX7J,mBAAS,IAJE,oBAIpC8J,EAJoC,KAI1BC,EAJ0B,OAKG/J,mBAAS,IALZ,oBAKpCqK,EALoC,KAKnBC,EALmB,OAMbtK,mBAAS,IANI,oBAMpCmC,EANoC,KAM3BoI,EAN2B,KAQrChJ,EAAWe,cAEX0H,EAAWtJ,EAASoG,OAASpG,EAASoG,OAAOhB,MAAM,KAAK,GAAK,IAE7D9H,EAAeqE,aAAY,SAAA3G,GAAK,OAAIA,EAAMsC,gBACxC9B,EAA6B8B,EAA7B9B,MAAOJ,EAAsBkC,EAAtBlC,QAASiC,EAAaC,EAAbD,SAmBxB,OAjBAuI,qBAAU,WACFvI,GACAoC,EAAQM,KAAKuJ,KAElB,CAAC7J,EAASpC,EAAUiM,IAcnB,eAAC,GAAD,WACI,yCACC7H,GAAW,cAAC,GAAD,CAASf,QAAQ,SAAjB,SAA2Be,IACtCjG,GAAS,cAAC,GAAD,CAASkF,QAAQ,SAAjB,SAA2BlF,IACpCJ,GAAW,cAAC,GAAD,IACZ,eAACuE,GAAA,EAAD,CAAMC,SAjBQ,SAACC,GACnBA,EAAEC,iBAEEsJ,GAAYO,EACZE,EAAW,0BAEXhJ,EhBgDY,SAACT,EAAM8I,EAAOE,GAAd,gDAA2B,WAAOvI,GAAP,oBAAAE,EAAA,sEAE3CF,EAAS,CACL1F,KAAMlD,KAGJ+I,EAAS,CACXC,QAAS,CACL,eAAgB,qBARmB,SAYpBG,KAAM6G,KACzB,uBACA,CAAE,KAAQ7H,EAAM,MAAS8I,EAAO,SAAYE,GAC5CpI,GAfuC,gBAYnCM,EAZmC,EAYnCA,KAMRT,EAAS,CACL1F,KAAMjD,GACNmD,QAASiG,IAGbT,EAAS,CACL1F,KAAMrD,GACNuD,QAASiG,IAGb9C,aAAa+J,QAAQ,WAAY7J,KAAK8J,UAAUlH,IA5BL,kDA+B3CT,EAAS,CACL1F,KAAMhD,GACNkD,QAAS,KAAMkG,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAnC2B,0DAA3B,sDgBhDHqI,CAAS1J,EAAM8I,EAAOE,KAW/B,UAEI,eAACzJ,GAAA,EAAKuI,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACxI,GAAA,EAAKyI,MAAN,mBACA,cAACzI,GAAA,EAAKQ,QAAN,CACI4J,UAAQ,EACR5O,KAAK,OACLqO,YAAY,aACZjJ,MAAOH,EACPC,SAAU,SAACR,GAAD,OAAO6J,EAAQ7J,EAAES,OAAOC,aAK1C,eAACZ,GAAA,EAAKuI,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACxI,GAAA,EAAKyI,MAAN,4BACA,cAACzI,GAAA,EAAKQ,QAAN,CACI4J,UAAQ,EACR5O,KAAK,QACLqO,YAAY,cACZjJ,MAAO2I,EACP7I,SAAU,SAACR,GAAD,OAAOsJ,EAAStJ,EAAES,OAAOC,aAK3C,eAACZ,GAAA,EAAKuI,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACxI,GAAA,EAAKyI,MAAN,uBACA,cAACzI,GAAA,EAAKQ,QAAN,CACI4J,UAAQ,EACR5O,KAAK,WACLqO,YAAY,iBACZjJ,MAAO6I,EACP/I,SAAU,SAACR,GAAD,OAAOwJ,EAAYxJ,EAAES,OAAOC,aAK9C,eAACZ,GAAA,EAAKuI,MAAN,CAAYC,UAAU,kBAAtB,UACI,cAACxI,GAAA,EAAKyI,MAAN,+BACA,cAACzI,GAAA,EAAKQ,QAAN,CACI4J,UAAQ,EACR5O,KAAK,WACLqO,YAAY,mBACZjJ,MAAOoJ,EACPtJ,SAAU,SAACR,GAAD,OAAO+J,EAAmB/J,EAAES,OAAOC,aAKrD,cAACE,GAAA,EAAD,CAAQtF,KAAK,SAASuF,QAAQ,UAA9B,yBAMJ,cAAC2F,GAAA,EAAD,CAAK7F,UAAU,OAAf,SACI,eAAC+F,GAAA,EAAD,+BACqB,cAAC,QAAD,CACbrE,GAAIoH,EAAQ,0BAAsBA,GAAa,SADlC,8B,UCkBxBU,GAAkB,SAACpJ,GAAD,gDAAQ,WAAOC,EAAUC,GAAjB,wBAAAC,EAAA,sEAE/BF,EAAS,CACL1F,KAAMxB,KAHqB,EAQ3BmH,IADazD,EAPc,EAO3BD,UAAaC,SAGX2D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAbX,SAiBRC,KAAMC,IAAN,sBACJT,EADI,KAEnBI,GAnB2B,gBAiBvBM,EAjBuB,EAiBvBA,KAKRT,EAAS,CACL1F,KAAMvB,GACNyB,QAASiG,IAxBkB,kDA6B/BT,EAAS,CACL1F,KAAMtB,GACNwB,QAAS,KAAMkG,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAjCe,0DAAR,yDCuDhBwI,OAvKf,YAAqC,IAAZxK,EAAW,EAAXA,QAAW,EAERH,mBAAS,IAFD,oBAEzBc,EAFyB,KAEnBsJ,EAFmB,OAGNpK,mBAAS,IAHH,oBAGzB4J,EAHyB,KAGlBC,EAHkB,OAIA7J,mBAAS,IAJT,oBAIzB8J,EAJyB,KAIfC,EAJe,OAKc/J,mBAAS,IALvB,oBAKzBqK,EALyB,KAKRC,EALQ,OAMFtK,mBAAS,IANP,oBAMzBmC,EANyB,KAMhBoI,EANgB,KAQ1BhJ,EAAWe,cAEXrE,EAAcoE,aAAY,SAAA3G,GAAK,OAAIA,EAAMuC,eACvC/B,EAAyB+B,EAAzB/B,MAAOJ,EAAkBmC,EAAlBnC,QAASoC,EAASD,EAATC,KAGhBH,EADUsE,aAAY,SAAA3G,GAAK,OAAIA,EAAMoC,aACrCC,SAGAxB,EADkB8F,aAAY,SAAA3G,GAAK,OAAIA,EAAMyC,qBAC7C5B,QAEFsC,EAAcwD,aAAY,SAAA3G,GAAK,OAAIA,EAAMmD,eAC9B+L,EAA8C/L,EAAvD/C,QAA+B+O,EAAwBhM,EAA/B3C,MAAoB4C,EAAWD,EAAXC,OAEpDwH,qBAAU,WACDvI,EAGIG,GAASA,EAAK4C,OAAQvE,GAAWwB,EAASuG,MAAQpG,EAAKoG,KAKxD8F,EAAQlM,EAAK4C,MACb+I,EAAS3L,EAAK0L,SALdrI,EAAS,CAAE1F,KAAMxC,KACjBkI,EAASF,GAAe,YACxBE,ED4MY,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAE1BF,EAAS,CACL1F,KAAMjB,KAHgB,EAQtB4G,IADazD,EAPS,EAOtBD,UAAaC,SAGX2D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAbhB,SAiBHC,KAAMC,IAAN,wBAEnBL,GAnBsB,gBAiBlBM,EAjBkB,EAiBlBA,KAKRT,EAAS,CACL1F,KAAMhB,GACNkB,QAASiG,IAxBa,kDA6B1BT,EAAS,CACL1F,KAAMf,GACNiB,QAAS,KAAMkG,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAjCU,0DAAN,0DCjNhBhC,EAAQM,KAAK,UAWjBN,EAAQM,KAAK,cACd,CAACc,EAAUpB,EAASpC,EAAUG,EAAM3B,IAEvC,IAgBM0H,EAAY,IAAIC,KAAKC,aAAa,QAAS,CAC7CT,MAAO,WACPU,SAAU,QAGd,OACI,eAAC2C,GAAA,EAAD,WACI,eAACE,GAAA,EAAD,CAAKE,GAAI,EAAT,UACI,8CAEChF,GAAW,cAAC,GAAD,CAASf,QAAQ,SAAjB,SAA2Be,IACtCjG,GAAS,cAAC,GAAD,CAASkF,QAAQ,SAAjB,SAA2BlF,IACpCJ,GAAW,cAAC,GAAD,IACZ,eAACuE,GAAA,EAAD,CAAMC,SA7BI,SAACC,GACnBA,EAAEC,iBAEEsJ,GAAYO,EACZE,EAAW,2BAEXhJ,ElB6GqB,SAACrD,GAAD,gDAAU,WAAOqD,EAAUC,GAAjB,wBAAAC,EAAA,sEAEnCF,EAAS,CACL1F,KAAM3C,KAHyB,EAQ/BsI,IADazD,EAPkB,EAO/BD,UAAaC,SAGX2D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAbP,SAiBZC,KAAMgJ,IAAN,6BAEnB5M,EACAwD,GApB+B,gBAiB3BM,EAjB2B,EAiB3BA,KAMRT,EAAS,CACL1F,KAAM1C,GACN4C,QAASiG,IAGbT,EAAS,CACL1F,KAAMrD,GACNuD,QAASiG,IAGb9C,aAAa+J,QAAQ,WAAY7J,KAAK8J,UAAUlH,IAjCb,kDAoCnCT,EAAS,CACL1F,KAAMzC,GACN2C,QAAS,KAAMkG,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAxCmB,0DAAV,wDkB7GZ4I,CAAkB,CACvB,GAAM7M,EAAKoG,IACX,KAAQxD,EACR,MAAS8I,EACT,SAAYE,KAEhBS,EAAW,MAiBP,UAEI,eAAClK,GAAA,EAAKuI,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACxI,GAAA,EAAKyI,MAAN,mBACA,cAACzI,GAAA,EAAKQ,QAAN,CACI4J,UAAQ,EACR5O,KAAK,OACLqO,YAAY,aACZjJ,MAAOH,EACPC,SAAU,SAACR,GAAD,OAAO6J,EAAQ7J,EAAES,OAAOC,aAK1C,eAACZ,GAAA,EAAKuI,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACxI,GAAA,EAAKyI,MAAN,4BACA,cAACzI,GAAA,EAAKQ,QAAN,CACI4J,UAAQ,EACR5O,KAAK,QACLqO,YAAY,cACZjJ,MAAO2I,EACP7I,SAAU,SAACR,GAAD,OAAOsJ,EAAStJ,EAAES,OAAOC,aAK3C,eAACZ,GAAA,EAAKuI,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACxI,GAAA,EAAKyI,MAAN,uBACA,cAACzI,GAAA,EAAKQ,QAAN,CAEIhF,KAAK,WACLqO,YAAY,iBACZjJ,MAAO6I,EACP/I,SAAU,SAACR,GAAD,OAAOwJ,EAAYxJ,EAAES,OAAOC,aAK9C,eAACZ,GAAA,EAAKuI,MAAN,CAAYC,UAAU,kBAAtB,UACI,cAACxI,GAAA,EAAKyI,MAAN,+BACA,cAACzI,GAAA,EAAKQ,QAAN,CAEIhF,KAAK,WACLqO,YAAY,mBACZjJ,MAAOoJ,EACPtJ,SAAU,SAACR,GAAD,OAAO+J,EAAmB/J,EAAES,OAAOC,aAKrD,cAACE,GAAA,EAAD,CAAQtF,KAAK,SAASuF,QAAQ,UAA9B,0BAOR,eAAC6F,GAAA,EAAD,CAAKE,GAAI,EAAT,UACI,2CACCyD,EACG,cAAC,GAAD,IACAC,EACA,cAAC,GAAD,CAASzJ,QAAQ,SAAjB,SAA2ByJ,IAEnB,eAACG,GAAA,EAAD,CAAOC,SAAO,EAACC,YAAU,EAAChK,UAAU,WAApC,UACI,gCACI,+BACI,oCACA,sCACA,uCACA,sCACA,2CACA,4BAIR,gCACKpC,EAAOnB,KAAI,SAAAc,GAAK,OACb,+BACI,6BAAKA,EAAM6F,MACX,6BAAK7F,EAAM+J,UAAUC,UAAU,EAAG,MAClC,6BAAKxE,EAAUe,OAAOvG,EAAM0M,cAC5B,6BAAK1M,EAAM2M,OAAS3M,EAAM4M,OAAO5C,UAAU,EAAG,IAC1C,mBAAGvH,UAAU,eAAewC,MAAO,CAAEG,MAAO,aAEhD,6BACI,cAAC,iBAAD,CAAejB,GAAE,kBAAanE,EAAM6F,KAApC,SACI,cAACnD,GAAA,EAAD,CAAQD,UAAU,SAAlB,2BATHzC,EAAM6F,oBCzGxCgH,OA/Cf,YAAwD,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,MAE1C,OACI,eAACzI,GAAA,EAAD,CAAK/B,UAAU,8BAAf,UACI,cAAC+B,GAAA,EAAII,KAAL,UACKkI,EACG,cAAC,iBAAD,CAAe3I,GAAG,SAAlB,SACI,cAACK,GAAA,EAAIC,KAAL,sBAGA,cAACD,GAAA,EAAIC,KAAL,CAAUmF,UAAQ,EAAlB,qBAIZ,cAACpF,GAAA,EAAII,KAAL,UACKmI,EACG,cAAC,iBAAD,CAAe5I,GAAG,YAAlB,SACI,cAACK,GAAA,EAAIC,KAAL,yBAGA,cAACD,GAAA,EAAIC,KAAL,CAAUmF,UAAQ,EAAlB,wBAIZ,cAACpF,GAAA,EAAII,KAAL,UACKoI,EACG,cAAC,iBAAD,CAAe7I,GAAG,WAAlB,SACI,cAACK,GAAA,EAAIC,KAAL,wBAGA,cAACD,GAAA,EAAIC,KAAL,CAAUmF,UAAQ,EAAlB,uBAIZ,cAACpF,GAAA,EAAII,KAAL,UACKqI,EACG,cAAC,iBAAD,CAAe9I,GAAG,cAAlB,SACI,cAACK,GAAA,EAAIC,KAAL,4BAGA,cAACD,GAAA,EAAIC,KAAL,CAAUmF,UAAQ,EAAlB,+BC2CTsD,OAhFf,YAAsC,IAAZxL,EAAW,EAAXA,QAGd7C,EADK+E,aAAY,SAAA3G,GAAK,OAAIA,EAAM0B,QAChCE,gBAEFiE,EAAWe,cALgB,EAOHtC,mBAAS1C,EAAgBsO,SAPtB,oBAO1BA,EAP0B,KAOjBC,EAPiB,OAQT7L,mBAAS1C,EAAgBwO,MARhB,oBAQ1BA,EAR0B,KAQpBC,EARoB,OASG/L,mBAAS1C,EAAgB0O,YAT5B,oBAS1BA,EAT0B,KASdC,EATc,OAUHjM,mBAAS1C,EAAgB4O,SAVtB,oBAU1BA,EAV0B,KAUjBC,EAViB,KAkBjC,OACI,eAAC,GAAD,WACI,cAAC,GAAD,CAAeZ,OAAK,EAACC,OAAK,IAC1B,0CACA,eAACnL,GAAA,EAAD,CAAMC,SAVQ,SAACC,GRoBQ,IAACyB,EQnB5BzB,EAAEC,iBACFe,GRkB4BS,EQlBC,CAAE4J,UAASE,OAAME,aAAYE,WRkBrB,SAAC3K,GAC1CA,EAAS,CACL1F,KAAMzD,GACN2D,QAASiG,IAGb9C,aAAa+J,QAAQ,kBAAmB7J,KAAK8J,UAAUlH,OQvBnD7B,EAAQM,KAAK,aAOT,UAEI,eAACJ,GAAA,EAAKuI,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACxI,GAAA,EAAKyI,MAAN,sBACA,cAACzI,GAAA,EAAKQ,QAAN,CACI4J,UAAQ,EACR5O,KAAK,OACLqO,YAAY,gBACZjJ,MAAO2K,GAAoB,GAC3B7K,SAAU,SAACR,GAAD,OAAOsL,EAAWtL,EAAES,OAAOC,aAK7C,eAACZ,GAAA,EAAKuI,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACxI,GAAA,EAAKyI,MAAN,mBACA,cAACzI,GAAA,EAAKQ,QAAN,CACI4J,UAAQ,EACR5O,KAAK,OACLqO,YAAY,aACZjJ,MAAO6K,GAAc,GACrB/K,SAAU,SAACR,GAAD,OAAOwL,EAAQxL,EAAES,OAAOC,aAK1C,eAACZ,GAAA,EAAKuI,MAAN,CAAYC,UAAU,aAAtB,UACI,cAACxI,GAAA,EAAKyI,MAAN,0BACA,cAACzI,GAAA,EAAKQ,QAAN,CACI4J,UAAQ,EACR5O,KAAK,OACLqO,YAAY,oBACZjJ,MAAO+K,GAA0B,GACjCjL,SAAU,SAACR,GAAD,OAAO0L,EAAc1L,EAAES,OAAOC,aAKhD,eAACZ,GAAA,EAAKuI,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACxI,GAAA,EAAKyI,MAAN,sBACA,cAACzI,GAAA,EAAKQ,QAAN,CACI4J,UAAQ,EACR5O,KAAK,OACLqO,YAAY,gBACZjJ,MAAOiL,GAAoB,GAC3BnL,SAAU,SAACR,GAAD,OAAO4L,EAAW5L,EAAES,OAAOC,aAK7C,cAACE,GAAA,EAAD,CAAQtF,KAAK,SAASuF,QAAQ,UAA9B,6BCbDgL,OA3Df,YAAqC,IAAZjM,EAAW,EAAXA,QAGb7C,EADK+E,aAAY,SAAA3G,GAAK,OAAIA,EAAM0B,QAChCE,gBAEFiE,EAAWe,cALe,EAOUtC,mBAAS,SAPnB,oBAOzBnC,EAPyB,KAOVwO,EAPU,KAmBhC,OAVK/O,EAAgBsO,SACjBzL,EAAQM,KAAK,aAUb,eAAC,GAAD,WACI,cAAC,GAAD,CAAe8K,OAAK,EAACC,OAAK,EAACC,OAAK,IAEhC,eAACpL,GAAA,EAAD,CAAMC,SAVQ,SAACC,GT4BM,IAACyB,ES3B1BzB,EAAEC,iBACFe,GT0B0BS,ES1BCnE,ET0BQ,SAAC0D,GACxCA,EAAS,CACL1F,KAAMxD,GACN0D,QAASiG,IAGb9C,aAAa+J,QAAQ,gBAAiB7J,KAAK8J,UAAUlH,OS/BjD7B,EAAQM,KAAK,gBAOT,UACI,eAACJ,GAAA,EAAKuI,MAAN,WACI,cAACvI,GAAA,EAAKyI,MAAN,CAAYlE,GAAG,SAAf,2BACA,cAACqC,GAAA,EAAD,UACI,cAAC5G,GAAA,EAAKiM,MAAN,CACIzQ,KAAK,QACL0Q,MAAM,QACNjL,GAAG,QACHR,KAAK,gBACL0L,SAAO,EACPzL,SAAU,SAACR,GAAD,OAAO8L,EAAiB9L,EAAES,OAAOC,YAKnD,cAACgG,GAAA,EAAD,UACI,cAAC5G,GAAA,EAAKiM,MAAN,CACIzQ,KAAK,QACL0Q,MAAM,MACNjL,GAAG,MACHR,KAAK,gBACLC,SAAU,SAACR,GAAD,OAAO8L,EAAiB,eAO9C,cAAClL,GAAA,EAAD,CAAQtF,KAAK,SAASuF,QAAQ,UAA9B,6BCgHDqL,OAjKf,YAAwC,IAAZtM,EAAW,EAAXA,QAElB3B,EAAc6D,aAAY,SAAA3G,GAAK,OAAIA,EAAM8C,eACvCC,EAA0BD,EAA1BC,MAAOvC,EAAmBsC,EAAnBtC,MAAOK,EAAYiC,EAAZjC,QAEhBgF,EAAWe,cAEXlF,EAAOiF,aAAY,SAAA3G,GAAK,OAAIA,EAAM0B,QAExCA,EAAKsP,WAAatP,EAAKC,UAAUmM,QAAO,SAACC,EAAKlM,GAAN,OAAekM,EAAMlM,EAAK0H,MAAQ1H,EAAKiK,MAAK,GACpFpK,EAAKuP,cAAiBvP,EAAKsP,WAAa,IAAM,EAAI,GAClDtP,EAAKwP,SAAWxD,OAAQ,KAAShM,EAAKsP,YAEtCtP,EAAK+N,WAAc/B,OAAOhM,EAAKsP,YAActD,OAAOhM,EAAKuP,eAAiBvD,OAAOhM,EAAKwP,UAGjFxP,EAAKS,eACNsC,EAAQM,KAAK,YAGjB6F,qBAAU,WACF/J,IACA4D,EAAQM,KAAR,iBAAuBhC,EAAM6F,MAC7B/C,EAAS,CAAE1F,KAAMzB,QAEtB,CAACmC,EAAS4D,IAEb,IAYM8D,EAAY,IAAIC,KAAKC,aAAa,QAAS,CAC7CT,MAAO,WACPU,SAAU,QAGd,OACI,gCACI,cAAC,GAAD,CAAemH,OAAK,EAACC,OAAK,EAACC,OAAK,EAACC,OAAK,IACtC,eAAC3E,GAAA,EAAD,WACI,cAACE,GAAA,EAAD,CAAKE,GAAI,EAAT,SACI,eAACc,GAAA,EAAD,CAAW7G,QAAQ,QAAnB,UACI,eAAC6G,GAAA,EAAU5E,KAAX,WACI,0CAEA,8BACI,gDACCjG,EAAKE,gBAAgBsO,QAF1B,MAEsCxO,EAAKE,gBAAgBwO,KACtD,KACA1O,EAAKE,gBAAgB0O,WAJ1B,IAKK,KACA5O,EAAKE,gBAAgB4O,cAI9B,eAACjE,GAAA,EAAU5E,KAAX,WACI,gDACA,8BACI,8CACCjG,EAAKS,oBAId,eAACoK,GAAA,EAAU5E,KAAX,WACI,6CAC2B,IAA1BjG,EAAKC,UAAUiL,OAAe,cAAC,GAAD,CAASlH,QAAQ,OAAjB,gCAGvB,cAAC6G,GAAA,EAAD,CAAW7G,QAAQ,QAAnB,SACKhE,EAAKC,UAAUM,KAAI,SAACJ,EAAMsP,GAAP,OAChB,cAAC5E,GAAA,EAAU5E,KAAX,UACI,eAAC0D,GAAA,EAAD,WACI,cAACE,GAAA,EAAD,CAAKE,GAAI,EAAT,SACI,cAACV,GAAA,EAAD,CAAOjC,IAAKjH,EAAKkH,MAAOiC,IAAKnJ,EAAKuD,KAAM6F,OAAK,EAAC4C,SAAO,MAGzD,cAACtC,GAAA,EAAD,UACI,cAAC,QAAD,CAAMrE,GAAE,mBAAcrF,EAAKnB,SAA3B,SAAuCmB,EAAKuD,SAGhD,eAACmG,GAAA,EAAD,CAAKE,GAAI,EAAT,UACK5J,EAAKiK,IADV,MACkBvD,EAAUe,OAAOzH,EAAK0H,OADxC,MACmDhB,EAAUe,OAAOzH,EAAKiK,IAAMjK,EAAK0H,cAXvE4H,gBAwBjD,cAAC5F,GAAA,EAAD,CAAKE,GAAI,EAAT,SACI,cAAC9C,GAAA,EAAD,UACI,eAAC4D,GAAA,EAAD,CAAW7G,QAAQ,QAAnB,UACI,cAAC6G,GAAA,EAAU5E,KAAX,UACI,iDAGJ,cAAC4E,GAAA,EAAU5E,KAAX,UACI,eAAC0D,GAAA,EAAD,WACI,cAACE,GAAA,EAAD,qBACA,cAACA,GAAA,EAAD,UAAMhD,EAAUe,OAAO5H,EAAKsP,mBAIpC,cAACzE,GAAA,EAAU5E,KAAX,UACI,eAAC0D,GAAA,EAAD,WACI,cAACE,GAAA,EAAD,wBACA,cAACA,GAAA,EAAD,UAAMhD,EAAUe,OAAO5H,EAAKuP,sBAIpC,cAAC1E,GAAA,EAAU5E,KAAX,UACI,eAAC0D,GAAA,EAAD,WACI,cAACE,GAAA,EAAD,mBACA,cAACA,GAAA,EAAD,UAAMhD,EAAUe,OAAO5H,EAAKwP,iBAIpC,cAAC3E,GAAA,EAAU5E,KAAX,UACI,eAAC0D,GAAA,EAAD,WACI,cAACE,GAAA,EAAD,qBACA,cAACA,GAAA,EAAD,UAAMhD,EAAUe,OAAO5H,EAAK+N,mBAKpC,cAAClD,GAAA,EAAU5E,KAAX,UACKnH,GAAS,cAAC,GAAD,CAASkF,QAAQ,SAAjB,SAA2BlF,MAGzC,cAAC+L,GAAA,EAAU5E,KAAX,UACI,cAAClC,GAAA,EAAD,CACItF,KAAK,SACLqF,UAAU,YACVmH,SAA6B,IAAnBjL,EAAKC,UACfiG,QAxHb,WACf/B,ELAmB,SAAC9C,GAAD,gDAAW,WAAO8C,EAAUC,GAAjB,wBAAAC,EAAA,sEAE9BF,EAAS,CACL1F,KAAM5B,KAHoB,EAQ1BuH,IADazD,EAPa,EAO1BD,UAAaC,SAGX2D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAbZ,SAiBPC,KAAM6G,KAAN,mBAEnBlK,EACAiD,GApB0B,gBAiBtBM,EAjBsB,EAiBtBA,KAMRT,EAAS,CACL1F,KAAM3B,GACN6B,QAASiG,IAGbT,EAAS,CACL1F,KAAMvD,GACNyD,QAASiG,IAGb9C,aAAaqE,WAAW,aAjCM,kDAqC9BhC,EAAS,CACL1F,KAAM1B,GACN4B,QAAS,KAAMkG,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAzCc,0DAAX,wDKAV2K,CAAY,CACjBnO,WAAYvB,EAAKC,UACjBC,gBAAiBF,EAAKE,gBACtBO,cAAeT,EAAKS,cACpB6O,WAAYtP,EAAKsP,WACjBC,cAAevP,EAAKuP,cACpBC,SAAUxP,EAAKwP,SACfzB,WAAY/N,EAAK+N,eA4GG,yC,MCoEjB4B,OAjNf,YAA0C,IAAnBxF,EAAkB,EAAlBA,MAAOpH,EAAW,EAAXA,QACpB6M,EAAUzF,EAAMS,OAAO1G,GACvBC,EAAWe,cAEXlF,EAAOiF,aAAY,SAAA3G,GAAK,OAAIA,EAAM0B,QAJH,EAML4C,oBAAS,GANJ,oBAMpBiN,GANoB,WAQ/BvO,EAAe2D,aAAY,SAAA3G,GAAK,OAAIA,EAAMgD,gBACxCD,EAA0BC,EAA1BD,MAAOvC,EAAmBwC,EAAnBxC,MAAOJ,EAAY4C,EAAZ5C,QAEhB8C,EAAWyD,aAAY,SAAA3G,GAAK,OAAIA,EAAMkD,YAC3BsO,EAAoCtO,EAA7C9C,QAA8BqR,EAAevO,EAAxBrC,QAEvByC,EAAeqD,aAAY,SAAA3G,GAAK,OAAIA,EAAMsD,gBACNoO,GAAmBpO,EAArDlD,QAAqDkD,EAA5BzC,SAGzBwB,EADUsE,aAAY,SAAA3G,GAAK,OAAIA,EAAMoC,aACrCC,SAEHjC,GAAYI,IACbuC,EAAMiO,WAAajO,EAAME,WAAW6K,QAAO,SAACC,EAAKlM,GAAN,OAAekM,EAAMlM,EAAK0H,MAAQ1H,EAAKiK,MAAK,IAe3FlB,qBAAU,WAEDvI,GACDoC,EAAQM,KAAK,WAGZhC,GAAS0O,GAAc1O,EAAM6F,MAAQ8E,OAAO4D,IAAYI,GACzD7L,EAAS,CAAE1F,KAAMlB,KACjB4G,EAAS,CAAE1F,KAAMP,KAEjBiG,EAASmJ,GAAgBsC,KACjBvO,EAAM2M,SACTiC,OAAOC,OAGRL,GAAY,GA1BA,WACpB,IAAMM,EAASC,SAASC,cAAc,UACtCF,EAAO1R,KAAO,kBACd0R,EAAO/I,IAAM,2HACb+I,EAAOG,OAAQ,EACfH,EAAOI,OAAS,WACZV,GAAY,IAEhBO,SAASI,KAAKC,YAAYN,GAgBlBO,MAKT,CAACvM,EAAU9C,EAAOuO,EAASG,EAAYC,IAE1C,IAYMnJ,EAAY,IAAIC,KAAKC,aAAa,QAAS,CAC7CT,MAAO,WACPU,SAAU,QAGd,OAAOtI,EACH,cAAC,GAAD,IACAI,EACA,cAAC,GAAD,CAASkF,QAAQ,SAAjB,SAA2BlF,IAEnB,gCACI,yCAAYuC,EAAMsP,MAClB,eAAChH,GAAA,EAAD,WACI,cAACE,GAAA,EAAD,CAAKE,GAAI,EAAT,SACI,eAACc,GAAA,EAAD,CAAW7G,QAAQ,QAAnB,UACI,eAAC6G,GAAA,EAAU5E,KAAX,WACI,0CACA,8BAAG,4CAAH,IAA4B5E,EAAMP,KAAK4C,QACvC,8BAAG,6CAAwB,mBAAG8C,KAAI,iBAAYnF,EAAMP,KAAK0L,OAA9B,SAAwCnL,EAAMP,KAAK0L,WAC9E,8BACI,gDACCnL,EAAMnB,gBAAgBsO,QAF3B,MAEuCnN,EAAMnB,gBAAgBwO,KACxD,KACArN,EAAMnB,gBAAgB0O,WAJ3B,IAKK,KACAvN,EAAMnB,gBAAgB4O,WAG1BzN,EAAMuP,YACH,eAAC,GAAD,CAAS5M,QAAQ,UAAjB,0BAAyC3C,EAAMwP,eAE3C,cAAC,GAAD,CAAS7M,QAAQ,UAAjB,8BAIZ,eAAC6G,GAAA,EAAU5E,KAAX,WACI,gDACC5E,EAAM2M,OACH,eAAC,GAAD,CAAShK,QAAQ,UAAjB,qBAAoC3C,EAAM4M,UAEtC,cAAC,GAAD,CAASjK,QAAQ,UAAjB,yBAKZ,eAAC6G,GAAA,EAAU5E,KAAX,WACI,6CAC6B,IAA5B5E,EAAME,WAAW2J,OAAe,cAAC,GAAD,CAASlH,QAAQ,OAAjB,4BAGzB,cAAC6G,GAAA,EAAD,CAAW7G,QAAQ,QAAnB,SACK3C,EAAME,WAAWhB,KAAI,SAACJ,EAAMsP,GAAP,OAClB,cAAC5E,GAAA,EAAU5E,KAAX,UACI,eAAC0D,GAAA,EAAD,WACI,cAACE,GAAA,EAAD,CAAKE,GAAI,EAAT,SACI,cAACV,GAAA,EAAD,CAAOjC,IAAKjH,EAAKkH,MAAOiC,IAAKnJ,EAAKuD,KAAM6F,OAAK,EAAC4C,SAAO,MAGzD,cAACtC,GAAA,EAAD,UACI,cAAC,QAAD,CAAMrE,GAAE,mBAAcrF,EAAKnB,SAA3B,SAAuCmB,EAAKuD,SAGhD,eAACmG,GAAA,EAAD,CAAKE,GAAI,EAAT,UACK5J,EAAKiK,IADV,MACkBvD,EAAUe,OAAOzH,EAAK0H,OADxC,MACmDhB,EAAUe,OAAOzH,EAAKiK,IAAMjK,EAAK0H,cAXvE4H,gBAwBjD,cAAC5F,GAAA,EAAD,CAAKE,GAAI,EAAT,SACI,cAAC9C,GAAA,EAAD,UACI,eAAC4D,GAAA,EAAD,CAAW7G,QAAQ,QAAnB,UACI,cAAC6G,GAAA,EAAU5E,KAAX,UACI,iDAGJ,cAAC4E,GAAA,EAAU5E,KAAX,UACI,eAAC0D,GAAA,EAAD,WACI,cAACE,GAAA,EAAD,qBACA,cAACA,GAAA,EAAD,UAAMhD,EAAUe,OAAOvG,EAAMiO,mBAIrC,cAACzE,GAAA,EAAU5E,KAAX,UACI,eAAC0D,GAAA,EAAD,WACI,cAACE,GAAA,EAAD,wBACA,cAACA,GAAA,EAAD,UAAMhD,EAAUe,OAAOvG,EAAMkO,sBAIrC,cAAC1E,GAAA,EAAU5E,KAAX,UACI,eAAC0D,GAAA,EAAD,WACI,cAACE,GAAA,EAAD,mBACA,cAACA,GAAA,EAAD,UAAMhD,EAAUe,OAAOvG,EAAMmO,iBAIrC,cAAC3E,GAAA,EAAU5E,KAAX,UACI,eAAC0D,GAAA,EAAD,WACI,cAACE,GAAA,EAAD,qBACA,cAACA,GAAA,EAAD,UAAMhD,EAAUe,OAAOvG,EAAM0M,oBAInC1M,EAAM2M,QACJ,cAAC/G,GAAA,EAAD,UACI,eAAChE,GAAA,EAAD,CAAMC,SA7HxB,WAClBH,EAAQM,KAAK,aA4HsDS,UAAU,kBAAzC,UAC4B,UAAvB9D,EAAKS,cACF,cAACsD,GAAA,EAAD,CACID,UAAU,0BACVrF,KAAK,SACL6H,MAAO,CAAEwK,WAAY,WAHzB,SAII,cAACzH,GAAA,EAAD,CAAOjC,IAAI,kCAAkCmC,OAAK,EAAC4C,SAAO,EAAC7F,MAAO,CAAE6B,MAAO,WAG/E,cAACpE,GAAA,EAAD,CACID,UAAU,0BACVrF,KAAK,SACL6H,MAAO,CAAEwK,WAAY,WAHzB,SAII,cAACzH,GAAA,EAAD,CAAOjC,IAAI,gCAAgCmC,OAAK,EAAC4C,SAAO,EAAC7F,MAAO,CAAE6B,MAAO,WAGhF2H,GAAc,cAAC,GAAD,uBCtHhDiB,OAlFf,YAAsC,IAAZhO,EAAW,EAAXA,QAEhBoB,EAAWe,cAEXlE,EAAWiE,aAAY,SAAA3G,GAAK,OAAIA,EAAM0C,YACpCtC,EAA0BsC,EAA1BtC,QAASI,EAAiBkC,EAAjBlC,MAAOmC,EAAUD,EAAVC,MAGhBN,EADUsE,aAAY,SAAA3G,GAAK,OAAIA,EAAMoC,aACrCC,SAGSqQ,EADE/L,aAAY,SAAA3G,GAAK,OAAIA,EAAM4C,cACtC/B,QAGR+J,qBAAU,WACFvI,GAAYA,EAASyF,QACrBjC,ExB0La,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAEvBF,EAAS,CACL1F,KAAMvC,KAHa,EAQnBkI,IADazD,EAPM,EAOnBD,UAAaC,SAGX2D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAbnB,SAiBAC,KAAMC,IAAN,cAEnBL,GAnBmB,gBAiBfM,EAjBe,EAiBfA,KAKRT,EAAS,CACL1F,KAAMtC,GACNwC,QAASiG,IAxBU,kDA6BvBT,EAAS,CACL1F,KAAMrC,GACNuC,QAAS,KAAMkG,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAjCO,0DAAN,yDwBxLbhC,EAAQM,KAAK,YAGlB,CAACc,EAAUpB,EAASiO,EAAerQ,IAGtC,IAAMsQ,EAAgB,SAAC/M,GAEf+L,OAAOiB,QAAQ,+CACf/M,ExBsNc,SAACD,GAAD,gDAAQ,WAAOC,EAAUC,GAAjB,wBAAAC,EAAA,sEAE1BF,EAAS,CACL1F,KAAMnC,KAHgB,EAQtB8H,IADazD,EAPS,EAOtBD,UAAaC,SAGX2D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAbhB,SAiBHC,KAAMyM,OAAN,4BACEjN,EADF,KAEnBI,GAnBsB,gBAiBlBM,EAjBkB,EAiBlBA,KAKRT,EAAS,CACL1F,KAAMlC,GACNoC,QAASiG,IAxBa,kDA6B1BT,EAAS,CACL1F,KAAMjC,GACNmC,QAAS,KAAMkG,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAjCU,0DAAR,wDwBtNLqM,CAAWlN,KAI5B,OACI,gCACI,uCACCxF,EACM,cAAC,GAAD,IACDI,EACK,cAAC,GAAD,CAASkF,QAAQ,SAAjB,SAA2BlF,IAE1B,eAAC8O,GAAA,EAAD,CAAOC,SAAO,EAACwD,UAAQ,EAACC,OAAK,EAACxD,YAAU,EAAChK,UAAU,WAAnD,UACI,gCACI,+BACI,oCACA,sCACA,uCACA,uCACA,4BAIR,gCACK7C,EAAMV,KAAI,SAAAO,GAAI,OACX,+BACI,6BAAKA,EAAKoG,MACV,6BAAKpG,EAAK4C,OACV,6BAAK5C,EAAK0L,QACV,6BAAK1L,EAAKsF,QACN,mBAAGtC,UAAU,eAAewC,MAAO,CAAEG,MAAO,WAExC,mBAAG3C,UAAU,eAAewC,MAAO,CAAEG,MAAO,WAGpD,+BACI,cAAC,iBAAD,CAAejB,GAAE,sBAAiB1E,EAAKoG,IAAtB,SAAjB,SACI,cAACnD,GAAA,EAAD,CAAQC,QAAQ,QAAQF,UAAU,SAAlC,SACI,mBAAGA,UAAU,oBAIrB,cAACC,GAAA,EAAD,CAAQC,QAAQ,SAASF,UAAU,SAASoC,QAAS,kBAAM+K,EAAcnQ,EAAKoG,MAA9E,SACI,mBAAGpD,UAAU,wBAlBhBhD,EAAKoG,iBCkDnCqK,OApGf,YAA6C,IAAnBpH,EAAkB,EAAlBA,MAAOpH,EAAW,EAAXA,QAEvByO,EAASrH,EAAMS,OAAO1G,GAFY,EAIhBtB,mBAAS,IAJO,oBAIjCc,EAJiC,KAI3BsJ,EAJ2B,OAKdpK,mBAAS,IALK,oBAKjC4J,EALiC,KAK1BC,EAL0B,OAMV7J,oBAAS,GANC,oBAMjCwD,EANiC,KAMxBqL,EANwB,KAQlCtN,EAAWe,cAEXrE,EAAcoE,aAAY,SAAA3G,GAAK,OAAIA,EAAMuC,eACvC/B,EAAyB+B,EAAzB/B,MAAOJ,EAAkBmC,EAAlBnC,QAASoC,EAASD,EAATC,KAElBK,EAAa8D,aAAY,SAAA3G,GAAK,OAAIA,EAAM6C,cAC/BuQ,EAAgEvQ,EAAvErC,MAA6B6S,EAA0CxQ,EAAnDzC,QAAiCkT,EAAkBzQ,EAA3BhC,QAyBpD,OAvBA+J,qBAAU,WAEF0I,GACAzN,EAAS,CAAE1F,KAAM7B,KACjBmG,EAAQM,KAAK,oBAGRvC,EAAK4C,MAAQ5C,EAAKoG,MAAQ8E,OAAOwF,IAGlCxE,EAAQlM,EAAK4C,MACb+I,EAAS3L,EAAK0L,OACdiF,EAAW3Q,EAAKsF,UAJhBjC,EAASF,GAAeuN,MAQjC,CAAC1Q,EAAM0Q,EAAQI,EAAe7O,IAQ7B,gCACI,cAAC,QAAD,CAAMyC,GAAG,kBAAT,qBAIA,eAAC,GAAD,WACI,2CACCmM,GAAiB,cAAC,GAAD,IACjBD,GAAe,cAAC,GAAD,CAAS1N,QAAQ,SAAjB,SAA2B0N,IAE1ChT,EAAU,cAAC,GAAD,IAAaI,EAAQ,cAAC,GAAD,CAASkF,QAAQ,SAAjB,SAA2BlF,IAEnD,eAACmE,GAAA,EAAD,CAAMC,SAlBJ,SAACC,GACnBA,EAAEC,iBACFe,EzBkPkB,SAACrD,GAAD,gDAAU,WAAOqD,EAAUC,GAAjB,wBAAAC,EAAA,sEAE5BF,EAAS,CACL1F,KAAMhC,KAHkB,EAQxB2H,IADazD,EAPW,EAOxBD,UAAaC,SAGX2D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAbd,SAiBLC,KAAMgJ,IAAN,4BACE5M,EAAKoG,IADP,KAEnBpG,EACAwD,GApBwB,gBAiBpBM,EAjBoB,EAiBpBA,KAMRT,EAAS,CACL1F,KAAM/B,KAGVyH,EAAS,CACL1F,KAAM9C,GACNgD,QAASiG,IA7Be,kDAkC5BT,EAAS,CACL1F,KAAM9B,GACNgC,QAAS,KAAMkG,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAtCY,0DAAV,wDyBlPT8M,CAAW,CAAE3K,IAAKpG,EAAKoG,IAAKxD,OAAM8I,QAAOpG,cAgBlC,UAEI,eAACnD,GAAA,EAAKuI,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACxI,GAAA,EAAKyI,MAAN,mBACA,cAACzI,GAAA,EAAKQ,QAAN,CAEIhF,KAAK,OACLqO,YAAY,aACZjJ,MAAOH,EACPC,SAAU,SAACR,GAAD,OAAO6J,EAAQ7J,EAAES,OAAOC,aAK1C,eAACZ,GAAA,EAAKuI,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACxI,GAAA,EAAKyI,MAAN,4BACA,cAACzI,GAAA,EAAKQ,QAAN,CACIhF,KAAK,QACLqO,YAAY,cACZjJ,MAAO2I,EACP7I,SAAU,SAACR,GAAD,OAAOsJ,EAAStJ,EAAES,OAAOC,aAK3C,cAACZ,GAAA,EAAKuI,MAAN,CAAYC,UAAU,UAAtB,SACI,cAACxI,GAAA,EAAKiM,MAAN,CACIzQ,KAAK,WACL0Q,MAAM,WACNC,QAAShJ,EACTzC,SAAU,SAACR,GAAD,OAAOsO,EAAWtO,EAAES,OAAOwL,cAK7C,cAACrL,GAAA,EAAD,CAAQtF,KAAK,SAASuF,QAAQ,UAA9B,8BC4Bb8N,OAnHf,YAAgD,IAAnB/O,EAAkB,EAAlBA,QAEnBoB,GAFqC,EAATgG,MAEjBjF,eAEX7G,EAAc4G,aAAY,SAAA3G,GAAK,OAAIA,EAAMD,eACvCK,EAA0CL,EAA1CK,QAASI,EAAiCT,EAAjCS,MAAOP,EAA0BF,EAA1BE,SAAUM,EAAgBR,EAAhBQ,MAAOD,EAASP,EAATO,KAEnCM,EAAgB+F,aAAY,SAAA3G,GAAK,OAAIA,EAAMY,iBAChC6S,EAA8D7S,EAAvER,QAA+BsT,EAAwC9S,EAA/CJ,MAA6BkS,EAAkB9R,EAA3BC,QAE9CC,EAAgB6F,aAAY,SAAA3G,GAAK,OAAIA,EAAMc,iBAChC6S,EAAuF7S,EAAhGV,QAA+BwT,EAAiE9S,EAAxEN,MAA6BqT,EAA2C/S,EAApDD,QAAiCiT,EAAmBhT,EAA5BJ,QAIpE2B,EADUsE,aAAY,SAAA3G,GAAK,OAAIA,EAAMoC,aACrCC,SAEJkC,EAAUE,EAAQO,SAASoG,OAC/BR,qBAAU,WACN/E,EAAS,CAAE1F,KAAM5F,IAEZ8H,EAASyF,SACVrD,EAAQM,KAAK,UAGb8O,EACApP,EAAQM,KAAR,yBAA+B+O,EAAelL,IAA9C,UAEA/C,EAAS4E,GAAalG,MAG3B,CAACsB,EAAUpB,EAASpC,EAAUqQ,EAAemB,EAAeC,EAAgBvP,IAG/E,IAAMoO,EAAgB,SAAC/M,GAEf+L,OAAOiB,QAAQ,kDACf/M,ElBwDiB,SAACD,GAAD,gDAAQ,WAAOC,EAAUC,GAAjB,oBAAAC,EAAA,sEAE7BF,EAAS,CACL1F,KAAMlG,IAHmB,EAQzB6L,IADazD,EAPY,EAOzBD,UAAaC,SAGX2D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAbb,SAiBNC,KAAMyM,OAAN,+BACKjN,EADL,KAEnBI,GAnByB,cAiBrBM,KAKRT,EAAS,CACL1F,KAAMjG,IAvBmB,kDA4B7B2L,EAAS,CACL1F,KAAMhG,EACNkG,QAAS,KAAMkG,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAhCa,0DAAR,wDkBxDRsN,CAAcnO,KAQ/B,OACI,gCACI,eAACyF,GAAA,EAAD,CAAK7F,UAAU,qBAAf,UACI,cAAC+F,GAAA,EAAD,UACI,4CAGJ,cAACA,GAAA,EAAD,CAAK/F,UAAU,aAAf,SACI,eAACC,GAAA,EAAD,CAAQD,UAAU,OAAOoC,QAZZ,WACzB/B,ElB2FqB,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAE3BF,EAAS,CACL1F,KAAM/F,IAHiB,EAQvB0L,IADazD,EAPU,EAOvBD,UAAaC,SAGX2D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAbf,SAiBJC,KAAM6G,KAAN,wBAEnB,GACAjH,GApBuB,gBAiBnBM,EAjBmB,EAiBnBA,KAKRT,EAAS,CACL1F,KAAM9F,EACNgG,QAASiG,IAxBc,kDA6B3BT,EAAS,CACL1F,KAAM7F,EACN+F,QAAS,KAAMkG,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAjCW,0DAAN,0DkBhFT,UACI,mBAAGjB,UAAU,gBADjB,0BAMPiO,GAAiB,cAAC,GAAD,IACjBC,GAAe,cAAC,GAAD,CAAShO,QAAQ,SAAjB,SAA2BgO,IAG1CC,GAAiB,cAAC,GAAD,IACjBC,GAAe,cAAC,GAAD,CAASlO,QAAQ,SAAjB,SAA2BkO,IAE1CxT,EACM,cAAC,GAAD,IACDI,EACK,cAAC,GAAD,CAASkF,QAAQ,SAAjB,SAA2BlF,IAE1B,gCACI,eAAC8O,GAAA,EAAD,CAAOC,SAAO,EAACwD,UAAQ,EAACC,OAAK,EAACxD,YAAU,EAAChK,UAAU,WAAnD,UACI,gCACI,+BACI,oCACA,sCACA,uCACA,0CACA,uCACA,4BAIR,gCACKvF,EAASgC,KAAI,SAAAvB,GAAO,OACjB,+BACI,6BAAKA,EAAQkI,MACb,6BAAKlI,EAAQ0E,OACb,qCAAQ1E,EAAQ6I,SAChB,6BAAK7I,EAAQ4K,WACb,6BAAK5K,EAAQsT,QAEb,+BACI,cAAC,iBAAD,CAAe9M,GAAE,yBAAoBxG,EAAQkI,IAA5B,SAAjB,SACI,cAACnD,GAAA,EAAD,CAAQC,QAAQ,QAAQF,UAAU,SAAlC,SACI,mBAAGA,UAAU,oBAIrB,cAACC,GAAA,EAAD,CAAQC,QAAQ,SAASF,UAAU,SAASoC,QAAS,kBAAM+K,EAAcjS,EAAQkI,MAAjF,SACI,mBAAGpD,UAAU,wBAfhB9E,EAAQkI,aAsB7B,cAAC,GAAD,CAAUrI,MAAOA,EAAOD,KAAMA,EAAMwH,SAAS,WC2G1DmM,OArNf,YAAgD,IAAnBpI,EAAkB,EAAlBA,MAAOpH,EAAW,EAAXA,QAE1BuI,EAAYnB,EAAMS,OAAO1G,GAFY,EAInBtB,mBAAS,IAJU,oBAIpCc,EAJoC,KAI9BsJ,EAJ8B,OAKjBpK,mBAAS,GALQ,oBAKpCiF,EALoC,KAK7B2K,EAL6B,OAMjB5P,mBAAS,IANQ,oBAMpCyE,EANoC,KAM7BoL,EAN6B,OAOjB7P,mBAAS,IAPQ,oBAOpC0P,EAPoC,KAO7BI,EAP6B,OAQX9P,mBAAS,IARE,oBAQpCgH,EARoC,KAQ1B+I,EAR0B,OASH/P,mBAAS,GATN,oBASpCmI,EAToC,KAStB6H,EATsB,OAULhQ,mBAAS,IAVJ,oBAUpCkI,EAVoC,KAUvB+H,EAVuB,OAWTjQ,oBAAS,GAXA,oBAWpCkQ,EAXoC,KAWzBC,EAXyB,KAarC5O,EAAWe,cAEXnG,EAAiBkG,aAAY,SAAA3G,GAAK,OAAIA,EAAMS,kBAC1CD,EAA4BC,EAA5BD,MAAOJ,EAAqBK,EAArBL,QAASM,EAAYD,EAAZC,QAElBM,EAAgB2F,aAAY,SAAA3G,GAAK,OAAIA,EAAMgB,iBAClCoS,EAAgEpS,EAAvER,MAA6B6S,EAA0CrS,EAAnDZ,QAAiCkT,EAAkBtS,EAA3BH,QAGpD+J,qBAAU,WAEF0I,GACAzN,EAAS,CAAE1F,KAAMpF,IACjB0J,EAAQM,KAAK,uBAERrE,EAAQ0E,MAAQ1E,EAAQkI,MAAQ8E,OAAOV,IAGxC0B,EAAQhO,EAAQ0E,MAChB8O,EAASxT,EAAQ6I,OACjB4K,EAASzT,EAAQqI,OACjBqL,EAAS1T,EAAQsT,OACjBK,EAAY3T,EAAQ4K,UACpBgJ,EAAgB5T,EAAQ+L,cACxB8H,EAAe7T,EAAQ8L,cARvB3G,EAAS6E,GAAmBsC,MAerC,CAACnH,EAAUnF,EAASsM,EAAWvI,EAAS6O,IAE3C,IAcMoB,EAAiB,yCAAG,WAAO7P,GAAP,wBAAAkB,EAAA,6DAChB4O,EAAO9P,EAAES,OAAOsP,MAAM,IACtBC,EAAW,IAAIC,UAEZC,OAAO,QAASJ,GACzBE,EAASE,OAAO,aAAc/H,GAE9ByH,GAAa,GAPS,SAUZzO,EAAS,CACXC,QAAS,CACL,eAAgB,wBAZN,SAgBKG,KAAM6G,KAAK,wBAAyB4H,EAAU7O,GAhBnD,gBAgBVM,EAhBU,EAgBVA,KAGR6N,EAAS7N,GACTmO,GAAa,GApBK,kDAuBlBA,GAAa,GAvBK,0DAAH,sDA2BvB,OACI,gCACI,cAAC,QAAD,CAAMvN,GAAG,qBAAT,qBAIA,eAAC,GAAD,WACI,8CACCmM,GAAiB,cAAC,GAAD,IACjBD,GAAe,cAAC,GAAD,CAAS1N,QAAQ,SAAjB,SAA2B0N,IAE1ChT,EAAU,cAAC,GAAD,IAAaI,EAAQ,cAAC,GAAD,CAASkF,QAAQ,SAAjB,SAA2BlF,IAEnD,eAACmE,GAAA,EAAD,CAAMC,SAtDJ,SAACC,GACnBA,EAAEC,iBACFe,EnBgKqB,SAACnF,GAAD,gDAAa,WAAOmF,EAAUC,GAAjB,wBAAAC,EAAA,sEAElCF,EAAS,CACL1F,KAAMvF,IAHwB,EAQ9BkL,IADazD,EAPiB,EAO9BD,UAAaC,SAGX2D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAbR,SAiBXC,KAAMgJ,IAAN,+BACK1O,EAAQkI,IADb,KAEnBlI,EACAsF,GApB8B,gBAiB1BM,EAjB0B,EAiB1BA,KAKRT,EAAS,CACL1F,KAAMtF,EACNwF,QAASiG,IAIbT,EAAS,CACL1F,KAAMpG,EACNsG,QAASiG,IA9BqB,kDAmClCT,EAAS,CACL1F,KAAMrF,EACNuF,QAAS,KAAMkG,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAvCkB,0DAAb,wDmBhKZuO,CAAc,CACnBpM,IAAKoE,EACL5H,OACAmE,QACAR,QACAiL,QACA1I,WACAmB,eACAD,kBA4CY,UAEI,eAAC7H,GAAA,EAAKuI,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACxI,GAAA,EAAKyI,MAAN,mBACA,cAACzI,GAAA,EAAKQ,QAAN,CAEIhF,KAAK,OACLqO,YAAY,aACZjJ,MAAOH,EACPC,SAAU,SAACR,GAAD,OAAO6J,EAAQ7J,EAAES,OAAOC,aAK1C,eAACZ,GAAA,EAAKuI,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACxI,GAAA,EAAKyI,MAAN,oBACA,cAACzI,GAAA,EAAKQ,QAAN,CAEIhF,KAAK,SACLqO,YAAY,cACZjJ,MAAOgE,EACPlE,SAAU,SAACR,GAAD,OAAOqP,EAASrP,EAAES,OAAOC,aAM3C,eAACZ,GAAA,EAAKuI,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACxI,GAAA,EAAKyI,MAAN,oBACA,cAACzI,GAAA,EAAKQ,QAAN,CAEIhF,KAAK,OACLqO,YAAY,cACZjJ,MAAOwD,EACP1D,SAAU,SAACR,GAAD,OAAOsP,EAAStP,EAAES,OAAOC,UAIvC,cAACZ,GAAA,EAAKsQ,KAAN,CACIrP,GAAG,aACHiL,MAAM,cACNqE,QAAM,EACN7P,SAAUqP,IAIbF,GAAa,cAAC,GAAD,OAKlB,eAAC7P,GAAA,EAAKuI,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACxI,GAAA,EAAKyI,MAAN,oBACA,cAACzI,GAAA,EAAKQ,QAAN,CAEIhF,KAAK,OACLqO,YAAY,cACZjJ,MAAOyO,EACP3O,SAAU,SAACR,GAAD,OAAOuP,EAASvP,EAAES,OAAOC,aAK3C,eAACZ,GAAA,EAAKuI,MAAN,CAAYC,UAAU,eAAtB,UACI,cAACxI,GAAA,EAAKyI,MAAN,oBACA,cAACzI,GAAA,EAAKQ,QAAN,CAEIhF,KAAK,SACLqO,YAAY,cACZjJ,MAAOkH,EACPpH,SAAU,SAACR,GAAD,OAAOyP,EAAgBzP,EAAES,OAAOC,aAKlD,eAACZ,GAAA,EAAKuI,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACxI,GAAA,EAAKyI,MAAN,uBACA,cAACzI,GAAA,EAAKQ,QAAN,CAEIhF,KAAK,OACLqO,YAAY,iBACZjJ,MAAO+F,EACPjG,SAAU,SAACR,GAAD,OAAOwP,EAAYxP,EAAES,OAAOC,aAK9C,eAACZ,GAAA,EAAKuI,MAAN,CAAYC,UAAU,cAAtB,UACI,cAACxI,GAAA,EAAKyI,MAAN,0BACA,cAACzI,GAAA,EAAKQ,QAAN,CAEIhF,KAAK,OACLqO,YAAY,oBACZjJ,MAAOiH,EACPnH,SAAU,SAACR,GAAD,OAAO0P,EAAe1P,EAAES,OAAOC,aAMjD,cAACE,GAAA,EAAD,CAAQtF,KAAK,SAASuF,QAAQ,UAA9B,8BCzHbyP,OAnFf,YAAuC,IAAZ1Q,EAAW,EAAXA,QAEjBoB,EAAWe,cAEXvD,EAAYsD,aAAY,SAAA3G,GAAK,OAAIA,EAAMqD,aACrCjD,EAA2BiD,EAA3BjD,QAASI,EAAkB6C,EAAlB7C,MAAO4C,EAAWC,EAAXD,OAGhBf,EADUsE,aAAY,SAAA3G,GAAK,OAAIA,EAAMoC,aACrCC,SAcR,OAVAuI,qBAAU,WACFvI,GAAYA,EAASyF,QACrBjC,EXqQc,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAExBF,EAAS,CACL1F,KAAMb,KAHc,EAQpBwG,IADazD,EAPO,EAOpBD,UAAaC,SAGX2D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAblB,SAiBDC,KAAMC,IAAN,eAEnBL,GAnBoB,gBAiBhBM,EAjBgB,EAiBhBA,KAKRT,EAAS,CACL1F,KAAMZ,GACNc,QAASiG,IAxBW,kDA6BxBT,EAAS,CACL1F,KAAMX,GACNa,QAAS,KAAMkG,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAjCQ,0DAAN,yDWnQdhC,EAAQM,KAAK,YAGlB,CAACc,EAAUpB,EAASpC,IAInB,gCACI,wCACCjC,EACM,cAAC,GAAD,IACDI,EACK,cAAC,GAAD,CAASkF,QAAQ,SAAjB,SAA2BlF,IAE1B,eAAC8O,GAAA,EAAD,CAAOC,SAAO,EAACwD,UAAQ,EAACC,OAAK,EAACxD,YAAU,EAAChK,UAAU,WAAnD,UACI,gCACI,+BACI,oCACA,sCACA,sCACA,uCACA,sCACA,2CACA,4BAIR,gCACKpC,EAAOnB,KAAI,SAAAc,GAAK,OACb,+BACI,6BAAKA,EAAM6F,MACX,6BAAK7F,EAAMP,MAAQO,EAAMP,KAAK4C,OAC9B,6BAAKrC,EAAM+J,UAAUC,UAAU,EAAG,MAClC,qCAAQhK,EAAM0M,cAEd,6BAAK1M,EAAM2M,OACP3M,EAAM4M,OAAO5C,UAAU,EAAG,IAEtB,mBAAGvH,UAAU,eAAewC,MAAO,CAAEG,MAAO,WAIpD,6BAAKpF,EAAMuP,YACPvP,EAAMwP,YAAYxF,UAAU,EAAG,IAE3B,mBAAGvH,UAAU,eAAewC,MAAO,CAAEG,MAAO,WAIpD,6BACI,cAAC,iBAAD,CAAejB,GAAE,iBAAYnE,EAAM6F,KAAnC,SACI,cAACnD,GAAA,EAAD,CAAQC,QAAQ,QAAQF,UAAU,SAAlC,2BAtBHzC,EAAM6F,iBC6FpCwM,OAxIf,YAAwD,EAA5BvJ,MAA4B,EAArB7G,SAAsB,IAAZP,EAAW,EAAXA,QACnCoB,EAAWe,cADmC,EAG1BtC,mBAAS,IAHiB,oBAG7C+Q,EAH6C,KAGtCC,EAHsC,OAIxBhR,mBAAS,IAJe,oBAI7CiR,EAJ6C,KAIrCC,EAJqC,OAKlBlR,mBAAS,GALS,oBAK7CmR,EAL6C,KAKlCC,EALkC,OAM1BpR,mBAAS,IANiB,oBAM7CqR,EAN6C,KAMtCC,EANsC,OAO5BtR,mBAAS,IAPmB,oBAO7CuR,EAP6C,KAOvCC,EAPuC,OAQ1BxR,mBAAS,IARiB,oBAQ7CyR,EAR6C,KAQtCC,EARsC,OAShB1R,mBAAS,IATO,oBAW9CvE,GAX8C,UAWhC4G,aAAY,SAAA3G,GAAK,OAAIA,EAAMD,gBAGzCa,GAF4Cb,EAA1CK,QAA0CL,EAAjCS,MAAiCT,EAA1BE,SAA0BF,EAAhBQ,MAAgBR,EAATO,KAEnBqG,aAAY,SAAA3G,GAAK,OAAIA,EAAMY,kBACY8R,GAAkB9R,EAAvER,QAAuEQ,EAA/CJ,MAA+CI,EAA3BC,SAE9CE,EAAkB4F,aAAY,SAAA3G,GAAK,OAAIA,EAAMe,mBACckV,GAA+ClV,EAAxGX,QAAwGW,EAA9EP,MAA8EO,EAAxDF,SAAmCqV,EAAqBnV,EAA9BL,QAI1E2B,EADUsE,aAAY,SAAA3G,GAAK,OAAIA,EAAMoC,aACrCC,SAEJkC,EAAUE,EAAQO,SAASoG,OAC/BR,qBAAU,WACN/E,EAAS,CAAE1F,KAAMxF,IAEbsb,EACAxR,EAAQM,KAAR,gBAAsBmR,EAAiBtN,IAAvC,gBAAkDsN,EAAiBzJ,eAEnE5G,EAAS4E,GAAalG,MAG3B,CAACsB,EAAUpB,EAASpC,EAAUqQ,EAAeuD,EAAiBC,EAAkB3R,IAEnF,IAYMgE,EAAY,IAAIC,KAAKC,aAAa,QAAS,CAC7CT,MAAO,WACPU,SAAU,QAGd,OACI,8BACI,eAAC/D,GAAA,EAAD,CAAMC,SAnBQ,SAACC,GrBuII,IAACnE,EqBtIxBmE,EAAEC,iBACFe,GrBqIwBnF,EqBrIC,CACrB0E,KAAM,gBAAiBiQ,EAAQ,MAAQE,EACvChM,MAAO4M,UAAUA,SAASd,GAAOc,SAASZ,IAASY,SAASV,GAAW,MACvEzB,MAAO,eACP1I,SAAU,SACVmB,aAAcgJ,EACdjJ,YAAa,wCAA+CmJ,EAA/C,WAAyEE,EAAzE,YAAmGE,EAAQ,MrB+HrG,yCAAa,WAAOlQ,EAAUC,GAAjB,wBAAAC,EAAA,sEAEpCF,EAAS,CACL1F,KAAM3F,IAH0B,EAQhCsL,IADazD,EAPmB,EAOhCD,UAAaC,SAGX2D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAbN,SAiBbC,KAAM6G,KAAN,0BAEnBvM,EACAsF,GApBgC,gBAiB5BM,EAjB4B,EAiB5BA,KAKRT,EAAS,CACL1F,KAAM1F,EACN4F,QAASiG,IAxBuB,kDA6BpCT,EAAS,CACL1F,KAAMzF,EACN2F,QAAS,KAAMkG,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAjCoB,0DAAb,2DqBpHnB,UACI,eAAC4E,GAAA,EAAD,WACI,cAACE,GAAA,EAAD,UACA,eAAC5G,GAAA,EAAKuI,MAAN,CAAY1H,UAAU,OAAO2H,UAAU,kBAAvC,UACA,cAACxI,GAAA,EAAKyI,MAAN,oBACA,cAACzI,GAAA,EAAKQ,QAAN,CAAchF,KAAK,SAASqO,YAAY,QAAQnJ,SAAU,SAACR,GAAD,OAAOyQ,EAASzQ,EAAES,OAAOC,UACnF,mBAAGyC,MAAO,CAAEG,MAAO,WAAnB,2EAGA,cAACoD,GAAA,EAAD,UACA,eAAC5G,GAAA,EAAKuI,MAAN,CAAY1H,UAAU,OAAO2H,UAAU,mBAAvC,UACA,cAACxI,GAAA,EAAKyI,MAAN,qBACA,cAACzI,GAAA,EAAKQ,QAAN,CAAchF,KAAK,SAASqO,YAAY,SAASnJ,SAAU,SAACR,GAAD,OAAO2Q,EAAU3Q,EAAES,OAAOC,UACrF,mBAAGyC,MAAO,CAAEG,MAAO,WAAnB,gFAMJ,eAACxD,GAAA,EAAKuI,MAAN,CAAa1H,UAAU,OAAO2H,UAAU,YAAxC,UACI,cAACxI,GAAA,EAAKyI,MAAN,mBACA,eAACzI,GAAA,EAAKQ,QAAN,CAAc+D,GAAG,SAAS7D,SAAU,SAACR,GAAD,OAAO+Q,EAAS/Q,EAAES,OAAOC,QAA7D,UACI,2CACA,4CACA,2CACA,4CACA,0CACA,gDAIR,eAACZ,GAAA,EAAKuI,MAAN,CAAa1H,UAAU,OAAO2H,UAAU,YAAxC,UACI,cAACxI,GAAA,EAAKyI,MAAN,oBACA,eAACzI,GAAA,EAAKQ,QAAN,CAAc+D,GAAG,SAAS7D,SAAU,SAACR,GAAD,OAAOmR,EAASnR,EAAES,OAAOC,QAA7D,UACI,4CACA,iDAIR,eAACZ,GAAA,EAAKuI,MAAN,CAAa1H,UAAU,OAAO2H,UAAU,WAAxC,UACI,cAACxI,GAAA,EAAKyI,MAAN,mBACA,eAACzI,GAAA,EAAKQ,QAAN,CAAc+D,GAAG,SAAS7D,SAAU,SAACR,GAAD,OAAOiR,EAAQjR,EAAES,OAAOC,QAA5D,UACI,qDACA,qDACA,qDACA,2DAIR,eAACZ,GAAA,EAAKuI,MAAN,CAAY1H,UAAU,OAAO2H,UAAU,YAAvC,UACI,cAACxI,GAAA,EAAKyI,MAAN,wBACA,cAACzI,GAAA,EAAKQ,QAAN,CAAchF,KAAK,SAASqO,YAAY,YAAY4H,IAAK,EAAG/Q,SAAU,SAACR,GAAD,OAAO6Q,EAAa7Q,EAAES,OAAOC,aAGvG,uBACA,eAAC8F,GAAA,EAAD,WACI,cAACE,GAAA,EAAD,UACI,cAAC5G,GAAA,EAAKyI,MAAN,CAAYlE,GAAG,KAAf,qBAGJ,cAACqC,GAAA,EAAD,UACI,cAAC5G,GAAA,EAAKyI,MAAN,CAAYlE,GAAG,KAAf,SAAqBX,EAAUe,QAAQ6M,SAASd,GAAOc,SAASZ,IAASY,SAASV,GAAW,aAIrG,uBACA,uBACCJ,EAAQ,IAAMA,EAAQ,KAAOE,EAAS,KAAOA,EAAS,KAAqB,IAAdE,EAC1D,cAAC,GAAD,CAAS/P,QAAQ,UAAjB,qDAIA,cAACD,GAAA,EAAD,CAAQtF,KAAK,SAASuF,QAAQ,UAA9B,sCCdL2Q,OAjHf,YAAuD,IAAnB5R,EAAkB,EAAlBA,QAE1BoB,GAF4C,EAATgG,MAExBjF,eAEXzF,EAAmBwF,aAAY,SAAA3G,GAAK,OAAIA,EAAMmB,oBAC5Cf,EAA+Ce,EAA/Cf,QAASI,EAAsCW,EAAtCX,MAAOY,EAA+BD,EAA/BC,cAAeb,EAAgBY,EAAhBZ,MAAOD,EAASa,EAATb,KAExCiB,EAAqBoF,aAAY,SAAA3G,GAAK,OAAIA,EAAMuB,sBACrCkS,EAA8DlS,EAAvEnB,QAA+BsT,EAAwCnS,EAA/Cf,MAA6BkS,EAAkBnR,EAA3BV,QAE9CW,EAAqBmF,aAAY,SAAA3G,GAAK,OAAIA,EAAMwB,sBACrCmS,EAAiGnS,EAA1GpB,QAA+BwT,EAA2EpS,EAAlFhB,MAA6BqT,EAAqDrS,EAA9DX,QAAsCyV,EAAwB9U,EAAtCF,aAIpEe,EADUsE,aAAY,SAAA3G,GAAK,OAAIA,EAAMoC,aACrCC,SAEJkC,EAAUE,EAAQO,SAASoG,OAC/BR,qBAAU,WACN/E,EAAS,CAAE1F,KAAMhE,IAEZkG,EAASyF,SACVrD,EAAQM,KAAK,UAGb8O,EACApP,EAAQM,KAAR,oCAA0CuR,EAAoB1N,IAA9D,UAEA/C,ECdqB,eAACtB,EAAD,uDAAW,GAAX,gDAAkB,WAAOsB,GAAP,kBAAAE,EAAA,sEAE3CF,EAAS,CAAE1F,KAAM5E,IAF0B,SAIpB6K,KAAMC,IAAN,4BAA+B9B,IAJX,gBAInC+B,EAJmC,EAInCA,KAERT,EAAS,CACL1F,KAAM3E,EACN6E,QAASiG,IAR8B,gDAY3CT,EAAS,CACL1F,KAAM1E,EACN4E,QAAS,KAAMkG,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAhB2B,yDAAlB,sDDcZ8P,CAAkBhS,MAGhC,CAACsB,EAAUpB,EAASpC,EAAUqQ,EAAemB,EAAeyC,EAAqB/R,IAGpF,IAAMoO,EAAgB,SAAC/M,GAEf+L,OAAOiB,QAAQ,uDACf/M,ECqBsB,SAACD,GAAD,gDAAQ,WAAOC,EAAUC,GAAjB,oBAAAC,EAAA,sEAElCF,EAAS,CACL1F,KAAMtE,IAHwB,EAQ9BiK,IADazD,EAPiB,EAO9BD,UAAaC,SAGX2D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAbR,SAiBXC,KAAMyM,OAAN,oCACUjN,EADV,KAEnBI,GAnB8B,cAiB1BM,KAKRT,EAAS,CACL1F,KAAMrE,IAvBwB,kDA4BlC+J,EAAS,CACL1F,KAAMpE,EACNsE,QAAS,KAAMkG,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAhCkB,0DAAR,wDDrBb+P,CAAmB5Q,KAQpC,OACI,gCACI,eAACyF,GAAA,EAAD,CAAK7F,UAAU,qBAAf,UACI,cAAC+F,GAAA,EAAD,UACI,uDAGJ,cAACA,GAAA,EAAD,CAAK/F,UAAU,aAAf,SACI,eAACC,GAAA,EAAD,CAAQD,UAAU,OAAOoC,QAZP,WAC9B/B,ECuD0B,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAEhCF,EAAS,CACL1F,KAAMnE,IAHsB,EAQ5B8J,IADazD,EAPe,EAO5BD,UAAaC,SAGX2D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAbV,SAiBTC,KAAM6G,KAAN,6BAEnB,GACAjH,GApB4B,gBAiBxBM,EAjBwB,EAiBxBA,KAKRT,EAAS,CACL1F,KAAMlE,EACNoE,QAASiG,IAxBmB,kDA6BhCT,EAAS,CACL1F,KAAMjE,EACNmE,QAAS,KAAMkG,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAjCgB,0DAAN,0DD5Cd,UACI,mBAAGjB,UAAU,gBADjB,+BAMPiO,GAAiB,cAAC,GAAD,IACjBC,GAAe,cAAC,GAAD,CAAShO,QAAQ,SAAjB,SAA2BgO,IAG1CC,GAAiB,cAAC,GAAD,IACjBC,GAAe,cAAC,GAAD,CAASlO,QAAQ,SAAjB,SAA2BkO,IAE1CxT,EACM,cAAC,GAAD,IACDI,EACK,cAAC,GAAD,CAASkF,QAAQ,SAAjB,SAA2BlF,IAE1B,gCACI,eAAC8O,GAAA,EAAD,CAAOC,SAAO,EAACwD,UAAQ,EAACC,OAAK,EAACxD,YAAU,EAAChK,UAAU,WAAnD,UACI,gCACI,+BACI,oCACA,uCACA,6CACA,sCACA,8CAIR,gCACKpE,EAAca,KAAI,SAAAX,GAAY,OAC3B,+BACI,6BAAKA,EAAasH,MAClB,6BAAKtH,EAAaoG,QAClB,6BAAKpG,EAAakL,cAClB,6BAAKlL,EAAamV,OAElB,+BACI,cAAC,iBAAD,CAAevP,GAAE,8BAAyB5F,EAAasH,IAAtC,SAAjB,SACI,cAACnD,GAAA,EAAD,CAAQC,QAAQ,QAAQF,UAAU,SAAlC,SACI,mBAAGA,UAAU,oBAIrB,cAACC,GAAA,EAAD,CAAQC,QAAQ,SAASF,UAAU,SAASoC,QAAS,kBAAM+K,EAAcrR,EAAasH,MAAtF,SACI,mBAAGpD,UAAU,wBAdhBlE,EAAasH,aAqBlC,cAAC,GAAD,CAAUrI,MAAOA,EAAOD,KAAMA,EAAMwH,SAAS,WEO1D4O,OA/Gf,YAAqD,IAAnB7K,EAAkB,EAAlBA,MAAOpH,EAAW,EAAXA,QAE/BkS,EAAiB9K,EAAMS,OAAO1G,GAFY,EAItBtB,mBAAS,IAJa,oBAIzCoD,EAJyC,KAIlCkP,EAJkC,OAKVtS,mBAAS,IALC,oBAKzCkI,EALyC,KAK5B+H,EAL4B,OAMxBjQ,mBAAS,IANe,oBAMzCmS,EANyC,KAMnCI,EANmC,KAQ1ChR,EAAWe,cAEXvF,EAAsBsF,aAAY,SAAA3G,GAAK,OAAIA,EAAMqB,uBAC/Cb,EAAiCa,EAAjCb,MAAOJ,EAA0BiB,EAA1BjB,QAASkB,EAAiBD,EAAjBC,aAElBG,EAAqBkF,aAAY,SAAA3G,GAAK,OAAIA,EAAMyB,sBACvC2R,EAAgE3R,EAAvEjB,MAA6B6S,EAA0C5R,EAAnDrB,QAAiCkT,EAAkB7R,EAA3BZ,QAgCpD,OA7BA+J,qBAAU,WDiByB,IAAChF,ECf5B0N,GACAzN,EAAS,CAAE1F,KAAM5D,KACjBkI,EAAQM,KAAK,kCAERzD,EAAa8D,MAAQ9D,EAAasH,MAAQ8E,OAAOiJ,IAGlDC,EAAStV,EAAaoG,OACtB6M,EAAejT,EAAakL,aAC5BqK,EAAQvV,EAAamV,OAJrB5Q,GDUwBD,ECVS+Q,EDUV,yCAAQ,WAAO9Q,GAAP,kBAAAE,EAAA,sEAEvCF,EAAS,CAAE1F,KAAMzE,IAFsB,SAIhB0K,KAAMC,IAAN,6BAAgCT,IAJhB,gBAI/BU,EAJ+B,EAI/BA,KAERT,EAAS,CACL1F,KAAMxE,EACN0E,QAASiG,IAR0B,gDAYvCT,EAAS,CACL1F,KAAMvE,EACNyE,QAAS,KAAMkG,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAhBuB,yDAAR,0DCAhC,CAACZ,EAAUvE,EAAcqV,EAAgBlS,EAAS6O,IAajD,gCACI,cAAC,QAAD,CAAMpM,GAAG,gCAAT,qBAIA,eAAC,GAAD,WACI,mDACCmM,GAAiB,cAAC,GAAD,IACjBD,GAAe,cAAC,GAAD,CAAS1N,QAAQ,SAAjB,SAA2B0N,IAE1ChT,EAAU,cAAC,GAAD,IAAaI,EAAQ,cAAC,GAAD,CAASkF,QAAQ,SAAjB,SAA2BlF,IAEnD,eAACmE,GAAA,EAAD,CAAMC,SAvBJ,SAACC,GACnBA,EAAEC,iBACFe,EDgG0B,SAACvE,GAAD,gDAAkB,WAAOuE,EAAUC,GAAjB,wBAAAC,EAAA,sEAE5CF,EAAS,CACL1F,KAAM/D,IAHkC,EAQxC0J,IADazD,EAP2B,EAOxCD,UAAaC,SAGX2D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAbE,SAiBrBC,KAAMgJ,IAAN,oCACU9N,EAAasH,IADvB,KAEnBtH,EACA0E,GApBwC,gBAiBpCM,EAjBoC,EAiBpCA,KAKRT,EAAS,CACL1F,KAAM9D,GACNgE,QAASiG,IAIbT,EAAS,CACL1F,KAAMxE,EACN0E,QAASiG,IA9B+B,kDAmC5CT,EAAS,CACL1F,KAAM7D,GACN+D,QAAS,KAAMkG,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAvC4B,0DAAlB,wDChGjBqQ,CAAmB,CACxBlO,IAAK+N,EACLjP,QACA8E,cACAiK,WAiBY,UAEI,eAAC9R,GAAA,EAAKuI,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACxI,GAAA,EAAKyI,MAAN,mBACA,cAACzI,GAAA,EAAKQ,QAAN,CAEIhF,KAAK,OACLqO,YAAY,cACZjJ,MAAOmC,EACPrC,SAAU,SAACR,GAAD,OAAO+R,EAAS/R,EAAES,OAAOC,aAK3C,eAACZ,GAAA,EAAKuI,MAAN,CAAYC,UAAU,cAAtB,UACI,cAACxI,GAAA,EAAKyI,MAAN,uBACA,cAACzI,GAAA,EAAKQ,QAAN,CAEIhF,KAAK,OACLqO,YAAY,oBACZjJ,MAAOiH,EACPnH,SAAU,SAACR,GAAD,OAAO0P,EAAe1P,EAAES,OAAOC,aAKjD,eAACZ,GAAA,EAAKuI,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACxI,GAAA,EAAKyI,MAAN,0BACA,cAACzI,GAAA,EAAKQ,QAAN,CAEIhF,KAAK,OACLqO,YAAY,aACZjJ,MAAOkR,EACPpR,SAAU,SAACR,GAAD,OAAOgS,EAAQhS,EAAES,OAAOC,aAM1C,cAACE,GAAA,EAAD,CAAQtF,KAAK,SAASuF,QAAQ,UAA9B,8BC1EbqR,OAjCf,WACE,OACE,eAAC9P,GAAA,EAAD,WACE,oBAAIzB,UAAU,cAAd,gCACA,cAACmD,GAAA,EAAD,UACE,cAACA,GAAA,EAAKK,KAAN,UACE,cAACL,GAAA,EAAKE,IAAN,CAAUC,IAAI,mCAGlB,cAACuC,GAAA,EAAD,CAAK7F,UAAU,MAAf,SACE,eAAC+F,GAAA,EAAD,WACE,oBAAI/F,UAAU,cAAd,0BADF,wlBAKF,cAACmD,GAAA,EAAD,UACE,cAACA,GAAA,EAAKK,KAAN,UACA,eAACqC,GAAA,EAAD,CAAK7F,UAAU,MAAf,UACE,eAAC+F,GAAA,EAAD,WACE,oBAAI/F,UAAU,cAAd,wBACA,2KAEF,eAAC+F,GAAA,EAAD,WACE,oBAAI/F,UAAU,cAAd,wBACA,iJCoLGwR,OAlMf,YAA2C,IAAnBnL,EAAkB,EAAlBA,MAAOpH,EAAW,EAAXA,QACrB6M,EAAUzF,EAAMS,OAAO1G,GACvBC,EAAWe,cAFqB,EAINtC,oBAAS,GAJH,oBAIrBiN,GAJqB,WAMhCvO,EAAe2D,aAAY,SAAA3G,GAAK,OAAIA,EAAMgD,gBACxCD,EAA0BC,EAA1BD,MAAOvC,EAAmBwC,EAAnBxC,MAAOJ,EAAY4C,EAAZ5C,QAEhB8C,EAAWyD,aAAY,SAAA3G,GAAK,OAAIA,EAAMkD,YACNuO,GAAevO,EAA7C9C,QAA6C8C,EAAxBrC,SAEvByC,EAAeqD,aAAY,SAAA3G,GAAK,OAAIA,EAAMsD,gBACNoO,GAAmBpO,EAArDlD,QAAqDkD,EAA5BzC,SAGzBwB,EADUsE,aAAY,SAAA3G,GAAK,OAAIA,EAAMoC,aACrCC,SAEFc,EAAcwD,aAAY,SAAA3G,GAAK,OAAIA,EAAMmD,eACgBA,EAAvD/C,QAAuD+C,EAA/B3C,MAA+B2C,EAAXC,OAE/ChD,GAAYI,IACbuC,EAAMiO,WAAajO,EAAME,WAAW6K,QAAO,SAACC,EAAKlM,GAAN,OAAekM,EAAMlM,EAAK0H,MAAQ1H,EAAKiK,MAAK,IAe3FlB,qBAAU,WAEDvI,GACDoC,EAAQM,KAAK,WAGZhC,GAAS0O,GAAc1O,EAAM6F,MAAQ8E,OAAO4D,IAAYI,GACzD7L,EAAS,CAAE1F,KAAMlB,KACjB4G,EAAS,CAAE1F,KAAMP,KAEjBiG,EAASmJ,GAAgBsC,KACjBvO,EAAM2M,SACTiC,OAAOC,OAGRL,GAAY,GA1BA,WACpB,IAAMM,EAASC,SAASC,cAAc,UACtCF,EAAO1R,KAAO,kBACd0R,EAAO/I,IAAM,2HACb+I,EAAOG,OAAQ,EACfH,EAAOI,OAAS,WACZV,GAAY,IAEhBO,SAASI,KAAKC,YAAYN,GAgBlBO,MAKT,CAACvM,EAAU9C,EAAOuO,EAASG,EAAYC,IAG1C,IAQMnJ,EAAY,IAAIC,KAAKC,aAAa,QAAS,CAC7CT,MAAO,WACPU,SAAU,QAGd,OAAOtI,EACH,cAAC,GAAD,IACAI,EACA,cAAC,GAAD,CAASkF,QAAQ,SAAjB,SAA2BlF,IAEnB,gCACI,cAAC,QAAD,CAAM0G,GAAG,WAAW1B,UAAU,qBAA9B,qBACA,4CAAezC,EAAM6F,OACrB,eAACyC,GAAA,EAAD,WACI,cAACE,GAAA,EAAD,CAAKE,GAAI,EAAT,SACI,eAACc,GAAA,EAAD,CAAW7G,QAAQ,QAAnB,UACI,eAAC6G,GAAA,EAAU5E,KAAX,WACI,0CACA,8BAAG,4CAAH,IAA4B5E,EAAMP,KAAK4C,QACvC,8BAAG,6CAAwB,mBAAG8C,KAAI,iBAAYnF,EAAMP,KAAK0L,OAA9B,SAAwCnL,EAAMP,KAAK0L,WAC9E,8BACI,gDACCnL,EAAMnB,gBAAgBsO,QAF3B,MAEuCnN,EAAMnB,gBAAgBwO,KACxD,KACArN,EAAMnB,gBAAgB0O,WAJ3B,IAKK,KACAvN,EAAMnB,gBAAgB4O,WAG1BzN,EAAMuP,YACH,eAAC,GAAD,CAAS5M,QAAQ,UAAjB,0BAAyC3C,EAAMwP,eAE3C,eAAC,GAAD,CAAS7M,QAAQ,UAAjB,0BAA0C3C,EAAM+J,UAAUC,UAAU,EAAG,UAInF,eAACR,GAAA,EAAU5E,KAAX,WACI,gDACA,8BACI,8CACC5E,EAAMZ,iBAEVY,EAAM2M,OACH,eAAC,GAAD,CAAShK,QAAQ,UAAjB,qBAAoC3C,EAAM4M,UAEtC,eAAC,GAAD,CAASjK,QAAQ,UAAjB,qBAAoC3C,EAAM+J,UAAUC,UAAU,EAAG,UAK7E,eAACR,GAAA,EAAU5E,KAAX,WACI,6CAC6B,IAA5B5E,EAAME,WAAW2J,OAAe,cAAC,GAAD,CAASlH,QAAQ,OAAjB,4BAGzB,cAAC6G,GAAA,EAAD,CAAW7G,QAAQ,QAAnB,SACK3C,EAAME,WAAWhB,KAAI,SAACJ,EAAMsP,GAAP,OAClB,cAAC5E,GAAA,EAAU5E,KAAX,UACI,eAAC0D,GAAA,EAAD,WACI,cAACE,GAAA,EAAD,CAAKE,GAAI,EAAT,SACM5J,EAAKuD,KAAM6R,SAAS,gBAClB,cAAClM,GAAA,EAAD,CAAOjC,IAAI,6BAA6BkC,IAAKnJ,EAAKuD,KAAM6F,OAAK,EAAC4C,SAAO,IAErE,cAAC9C,GAAA,EAAD,CAAOjC,IAAKjH,EAAKkH,MAAOiC,IAAKnJ,EAAKuD,KAAM6F,OAAK,EAAC4C,SAAO,MAI7D,cAACtC,GAAA,EAAD,UACI,cAAC,QAAD,CAAMrE,GAAE,mBAAcrF,EAAKnB,SAA3B,SAAuCmB,EAAKuD,SAGhD,eAACmG,GAAA,EAAD,CAAKE,GAAI,EAAT,UACK5J,EAAKiK,IADV,MACkBvD,EAAUe,OAAOzH,EAAK0H,OADxC,UACuDhB,EAAUe,OAAOzH,EAAKiK,IAAMjK,EAAK0H,cAf3E4H,gBA4BjD,eAAC5F,GAAA,EAAD,CAAKE,GAAI,EAAT,UACI,cAAC9C,GAAA,EAAD,CAAMnD,UAAU,OAAhB,SACI,eAAC+G,GAAA,EAAD,CAAW7G,QAAQ,QAAnB,UACI,cAAC6G,GAAA,EAAU5E,KAAX,UACI,iDAGJ,cAAC4E,GAAA,EAAU5E,KAAX,UACI,eAAC0D,GAAA,EAAD,WACI,cAACE,GAAA,EAAD,qBACA,eAACA,GAAA,EAAD,kBAAUxI,EAAMiO,WAAWkG,WAAWC,QAAQ,wBAAyB,aAI/E,cAAC5K,GAAA,EAAU5E,KAAX,UACI,eAAC0D,GAAA,EAAD,WACI,cAACE,GAAA,EAAD,wBACA,eAACA,GAAA,EAAD,kBAAUxI,EAAMkO,cAAciG,WAAWC,QAAQ,wBAAyB,aAIlF,cAAC5K,GAAA,EAAU5E,KAAX,UACI,eAAC0D,GAAA,EAAD,WACI,cAACE,GAAA,EAAD,mBACA,eAACA,GAAA,EAAD,kBAAUxI,EAAMmO,SAASgG,WAAWC,QAAQ,wBAAyB,aAI7E,cAAC5K,GAAA,EAAU5E,KAAX,UACI,eAAC0D,GAAA,EAAD,WACI,cAACE,GAAA,EAAD,qBACA,eAACA,GAAA,EAAD,kBAAUxI,EAAM0M,WAAWyH,WAAWC,QAAQ,wBAAyB,kBAKvF,cAAC,GAAD,CAASzR,QAAQ,UAAjB,0CCzIb0R,OArCf,WACE,OACE,eAAC,cAAD,WACE,cAAC,GAAD,IACA,sBAAM5R,UAAU,OAAhB,SACE,eAACyB,GAAA,EAAD,WACE,cAAC,KAAD,CAAOoQ,KAAK,IAAIC,UAAWnM,GAAYoM,OAAK,IAC5C,cAAC,KAAD,CAAOF,KAAK,cAAcC,UAAWlC,KACrC,cAAC,KAAD,CAAOiC,KAAK,SAASC,UAAWE,KAChC,cAAC,KAAD,CAAOH,KAAK,SAASC,UAAWrJ,KAChC,cAAC,KAAD,CAAOoJ,KAAK,YAAYC,UAAW7I,KACnC,cAAC,KAAD,CAAO4I,KAAK,WAAWC,UAAWrI,KAClC,cAAC,KAAD,CAAOoI,KAAK,YAAYC,UAAWrH,KACnC,cAAC,KAAD,CAAOoH,KAAK,cAAcC,UAAWvG,KACrC,cAAC,KAAD,CAAOsG,KAAK,aAAaC,UAAWjG,KACpC,cAAC,KAAD,CAAOgG,KAAK,WAAWC,UAAW5G,KAClC,cAAC,KAAD,CAAO2G,KAAK,eAAeC,UAAW1L,KACtC,cAAC,KAAD,CAAOyL,KAAK,aAAaC,UAAW7J,KACpC,cAAC,KAAD,CAAO4J,KAAK,cAAcC,UAAWN,KAErC,cAAC,KAAD,CAAOK,KAAK,kBAAkBC,UAAW7E,KACzC,cAAC,KAAD,CAAO4E,KAAK,uBAAuBC,UAAWrE,KAE9C,cAAC,KAAD,CAAOoE,KAAK,qBAAqBC,UAAW9D,KAC5C,cAAC,KAAD,CAAO6D,KAAK,0BAA0BC,UAAWrD,KAEjD,cAAC,KAAD,CAAOoD,KAAK,gCAAgCC,UAAWjB,KACvD,cAAC,KAAD,CAAOgB,KAAK,qCAAqCC,UAAWZ,KAE5D,cAAC,KAAD,CAAOW,KAAK,mBAAmBC,UAAWnC,UAG9C,cAAC,GAAD,QC9CAsC,GAAcC,QACW,cAA7B/F,OAAO3M,SAAS2S,UAEe,UAA7BhG,OAAO3M,SAAS2S,UAEhBhG,OAAO3M,SAAS2S,SAAS9L,MAAM,2DAqCnC,SAAS+L,GAAgBC,EAAO7R,GAC9B8R,UAAUC,cACPjJ,SAAS+I,GACTG,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBnY,QACf8X,UAAUC,cAAcO,YAI1BC,QAAQC,IACN,+GAKExS,GAAUA,EAAOyS,UACnBzS,EAAOyS,SAASR,KAMlBM,QAAQC,IAAI,sCAGRxS,GAAUA,EAAO0S,WACnB1S,EAAO0S,UAAUT,WAO5BU,OAAM,SAACnY,GACN+X,QAAQ/X,MAAM,4CAA6CA,MC9FjE,IAYeoY,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCIdO,IAASC,OACP,cAAC,IAAD,CAAUpV,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEF6N,SAASwH,eAAe,SFKnB,SAAkBtT,GACvB,GAA6C,kBAAmB8R,UAAW,CAGzE,GADkB,IAAIyB,IAAIC,GAAwB7H,OAAO3M,SAASkD,MACpDuR,SAAW9H,OAAO3M,SAASyU,OAIvC,OAGF9H,OAAO+H,iBAAiB,QAAQ,WAC9B,IAAM7B,EAAK,UAAM2B,GAAN,sBAEP/B,KAgEV,SAAiCI,EAAO7R,GAEtC2T,MAAM9B,EAAO,CACX5R,QAAS,CAAE,iBAAkB,YAE5B+R,MAAK,SAACzR,GAEL,IAAMqT,EAAcrT,EAASN,QAAQI,IAAI,gBAEnB,MAApBE,EAASsT,QACO,MAAfD,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5ChC,UAAUC,cAAcgC,MAAM/B,MAAK,SAACC,GAClCA,EAAa+B,aAAahC,MAAK,WAC7BrG,OAAO3M,SAASiV,eAKpBrC,GAAgBC,EAAO7R,MAG1B2S,OAAM,WACLJ,QAAQC,IAAI,oEAtFV0B,CAAwBrC,EAAO7R,GAI/B8R,UAAUC,cAAcgC,MAAM/B,MAAK,WACjCO,QAAQC,IACN,+GAMJZ,GAAgBC,EAAO7R,OE3B/BmU,GAKAvB,M","file":"static/js/main.88794b0f.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\n\r\nexport const PRODUCT_CREATE_V2_REQUEST = 'PRODUCT_CREATE_V2_REQUEST'\r\nexport const PRODUCT_CREATE_V2_SUCCESS = 'PRODUCT_CREATE_V2_SUCCESS'\r\nexport const PRODUCT_CREATE_V2_FAIL = 'PRODUCT_CREATE_V2_FAIL'\r\nexport const PRODUCT_CREATE_V2_RESET = 'PRODUCT_CREATE_V2_RESET'\r\n\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n\r\n\r\n","export const NOTIFICATION_LIST_REQUEST = 'NOTIFICATION_LIST_REQUEST'\r\nexport const NOTIFICATION_LIST_SUCCESS = 'NOTIFICATION_LIST_SUCCESS'\r\nexport const NOTIFICATION_LIST_FAIL = 'NOTIFICATION_LIST_FAIL'\r\n\r\n\r\nexport const NOTIFICATION_DETAILS_REQUEST = 'NOTIFICATION_DETAILS_REQUEST'\r\nexport const NOTIFICATION_DETAILS_SUCCESS = 'NOTIFICATION_DETAILS_SUCCESS'\r\nexport const NOTIFICATION_DETAILS_FAIL = 'NOTIFICATION_DETAILS_FAIL'\r\n\r\n\r\nexport const NOTIFICATION_DELETE_REQUEST = 'NOTIFICATION_DELETE_REQUEST'\r\nexport const NOTIFICATION_DELETE_SUCCESS = 'NOTIFICATION_DELETE_SUCCESS'\r\nexport const NOTIFICATION_DELETE_FAIL = 'NOTIFICATION_DELETE_FAIL'\r\n\r\n\r\nexport const NOTIFICATION_CREATE_REQUEST = 'NOTIFICATION_CREATE_REQUEST'\r\nexport const NOTIFICATION_CREATE_SUCCESS = 'NOTIFICATION_CREATE_SUCCESS'\r\nexport const NOTIFICATION_CREATE_FAIL = 'NOTIFICATION_CREATE_FAIL'\r\nexport const NOTIFICATION_CREATE_RESET = 'NOTIFICATION_CREATE_RESET'\r\n\r\n\r\nexport const NOTIFICATION_UPDATE_REQUEST = 'NOTIFICATION_UPDATE_REQUEST'\r\nexport const NOTIFICATION_UPDATE_SUCCESS = 'NOTIFICATION_UPDATE_SUCCESS'\r\nexport const NOTIFICATION_UPDATE_FAIL = 'NOTIFICATION_UPDATE_FAIL'\r\nexport const NOTIFICATION_UPDATE_RESET = 'NOTIFICATION_UPDATE_RESET'\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n\r\nexport const ORDER_PAYMENT_CREATE_REQUEST = 'ORDER_PAYMENT_CREATE_REQUEST'\r\nexport const ORDER_PAYMENT_CREATE_SUCCESS = 'ORDER_PAYMENT_CREATE_SUCCESS'\r\nexport const ORDER_PAYMENT_CREATE_FAIL = 'ORDER_PAYMENT_CREATE_FAIL'\r\nexport const ORDER_PAYMENT_CREATE_RESET = 'ORDER_PAYMENT_CREATE_RESET'\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productCreateV2Reducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer,\r\n} from './reducers/productReducers'\r\n\r\nimport {\r\n    notificationListReducer,\r\n    notificationDetailsReducer,\r\n    notificationDeleteReducer,\r\n    notificationCreateReducer,\r\n    notificationUpdateReducer,\r\n} from './reducers/notificationReducers'\r\n\r\nimport { cartReducer } from './reducers/cartReducers'\r\n\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer,\r\n} from './reducers/userReducers'\r\n\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer,\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productCreateV2: productCreateV2Reducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n\r\n    notificationList: notificationListReducer,\r\n    notificationDetails: notificationDetailsReducer,\r\n    notificationDelete: notificationDeleteReducer,\r\n    notificationCreate: notificationCreateReducer,\r\n    notificationUpdate: notificationUpdateReducer,\r\n\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n})\r\n\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst paymentMethodFromStorage = localStorage.getItem('paymentMethodV2') ?\r\n    JSON.parse(localStorage.getItem('paymentMethodV2')) : {}\r\n\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    \r\n    PRODUCT_CREATE_V2_REQUEST,\r\n    PRODUCT_CREATE_V2_SUCCESS,\r\n    PRODUCT_CREATE_V2_FAIL,\r\n    PRODUCT_CREATE_V2_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                page: action.payload.page,\r\n                pages: action.payload.pages\r\n            }\r\n\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productCreateV2Reducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_V2_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_V2_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_CREATE_V2_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_V2_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true, }\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload, }\r\n\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import {\r\n    NOTIFICATION_LIST_REQUEST,\r\n    NOTIFICATION_LIST_SUCCESS,\r\n    NOTIFICATION_LIST_FAIL,\r\n\r\n    NOTIFICATION_DETAILS_REQUEST,\r\n    NOTIFICATION_DETAILS_SUCCESS,\r\n    NOTIFICATION_DETAILS_FAIL,\r\n\r\n    NOTIFICATION_DELETE_REQUEST,\r\n    NOTIFICATION_DELETE_SUCCESS,\r\n    NOTIFICATION_DELETE_FAIL,\r\n\r\n    NOTIFICATION_CREATE_REQUEST,\r\n    NOTIFICATION_CREATE_SUCCESS,\r\n    NOTIFICATION_CREATE_FAIL,\r\n    NOTIFICATION_CREATE_RESET,\r\n\r\n\r\n    NOTIFICATION_UPDATE_REQUEST,\r\n    NOTIFICATION_UPDATE_SUCCESS,\r\n    NOTIFICATION_UPDATE_FAIL,\r\n    NOTIFICATION_UPDATE_RESET,\r\n} from '../constants/notificationConstants'\r\n\r\n\r\nexport const notificationListReducer = (state = { notifications: [] }, action) => {\r\n    switch (action.type) {\r\n        case NOTIFICATION_LIST_REQUEST:\r\n            return { loading: true, notifications: [] }\r\n\r\n        case NOTIFICATION_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                notifications: action.payload.notifications,\r\n                page: action.payload.page,\r\n                pages: action.payload.pages\r\n            }\r\n\r\n        case NOTIFICATION_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const notificationDetailsReducer = (state = { notification: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case NOTIFICATION_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n\r\n        case NOTIFICATION_DETAILS_SUCCESS:\r\n            return { loading: false, notification: action.payload }\r\n\r\n        case NOTIFICATION_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const notificationDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case NOTIFICATION_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case NOTIFICATION_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case NOTIFICATION_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const notificationCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case NOTIFICATION_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case NOTIFICATION_CREATE_SUCCESS:\r\n            return { loading: false, success: true, notification: action.payload }\r\n\r\n        case NOTIFICATION_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case NOTIFICATION_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const notificationUpdateReducer = (state = { notification: {} }, action) => {\r\n    switch (action.type) {\r\n        case NOTIFICATION_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case NOTIFICATION_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, notification: action.payload }\r\n\r\n        case NOTIFICATION_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case NOTIFICATION_UPDATE_RESET:\r\n            return { notification: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n\r\n    CART_CLEAR_ITEMS,\r\n} from '../constants/cartConstants'\r\n\r\n\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.product === existItem.product ? item : x)\r\n                }\r\n\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n\r\n} from '../constants/userConstants'\r\n\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n\r\n    ORDER_PAYMENT_CREATE_REQUEST,\r\n    ORDER_PAYMENT_CREATE_SUCCESS,\r\n    ORDER_PAYMENT_CREATE_FAIL,\r\n    ORDER_PAYMENT_CREATE_RESET,\r\n} from '../constants/orderConstants'\r\n\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPaymentCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAYMENT_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_PAYMENT_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_PAYMENT_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_PAYMENT_CREATE_RESET:\r\n            return {}\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5'\r\n            ></Form.Control>\r\n\r\n            <Button\r\n                type='submit'\r\n                variant='outline-success'\r\n                className='p-2'\r\n            >\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios'\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n\r\n} from '../constants/userConstants'\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name, 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nfunction Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>Sarana Pintu</Navbar.Brand>\r\n                    </LinkContainer>\r\n\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <SearchBox />\r\n                        <Nav className=\"ml-auto\">\r\n                            <LinkContainer to='/customdoor'>\r\n                                <Nav.Link ><i className=\"fas fa-solid fa-brush\"></i> Custom</Nav.Link>\r\n                            </LinkContainer>\r\n\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link ><i className=\"fas fa-shopping-cart\"></i> Cart</Nav.Link>\r\n                            </LinkContainer>\r\n                            \r\n                            <LinkContainer to='/about'>\r\n                                <Nav.Link ><i className=\"fas fa-info\"></i> About Us</Nav.Link>\r\n                            </LinkContainer>\r\n\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                    <LinkContainer to='/login'>\r\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\r\n                                    </LinkContainer>\r\n                                )}\r\n\r\n\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenue'>\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/notificationcenterlist'>\r\n                                        <NavDropdown.Item>Notification Center</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                </NavDropdown>\r\n                            )}\r\n\r\n\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport { MDBFooter } from 'mdb-react-ui-kit';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <MDBFooter className='text-center text-lg-start text-white' style={{ backgroundColor: '#0058A3'}}>\r\n      <section className='d-flex justify-content-center justify-content-lg-between p-4 border-bottom'>\r\n        <div className='me-5 d-none d-lg-block'>\r\n          <span>Get connected with us on social networks:</span>\r\n        </div>\r\n\r\n        <div>\r\n          <a href='' className='me-4 text-reset'>\r\n            <i className='fab fa-facebook-f'></i>\r\n          </a>\r\n          <a href='' className='me-4 text-reset'>\r\n            <i className='fab fa-twitter'></i>\r\n          </a>\r\n          <a href='' className='me-4 text-reset'>\r\n            <i className='fab fa-google'></i>\r\n          </a>\r\n          <a href='' className='me-4 text-reset'>\r\n            <i className='fab fa-instagram'></i>\r\n          </a>\r\n        </div>\r\n      </section>\r\n\r\n      <section className=''>\r\n        <div className='container text-center text-md-start mt-5'>\r\n          <div className='row mt-3'>\r\n            <div className='col-md-3 col-lg-4 col-xl-3 mx-auto mb-4'>\r\n              <h6 className='text-uppercase fw-bold mb-4' style={{ color: '#ffffff' }}>\r\n                <i className='fas fa-gem me-3'></i>Sarana Pintu\r\n              </h6>\r\n              <p>\r\n                Perusahaan yang bergerak di bidang pintu. Menyediakan jasa kustomisasi lengkap dengan pengiriman.\r\n              </p>\r\n            </div>\r\n\r\n            <div className='col-md-2 col-lg-2 col-xl-2 mx-auto mb-4 text-white'>\r\n              <h6 className='text-uppercase fw-bold mb-4' style={{ color: '#ffffff' }}>Products</h6>\r\n              <p>\r\n                <a href='#?keyword=pintu%20millenial&page=1' className='text-reset'>\r\n                  Pintu Millenial\r\n                </a>\r\n              </p>\r\n              <p>\r\n                <a href='#?keyword=pintu%20pvc%20biasa&page=1' className='text-reset'>\r\n                  Pintu PVC Biasa \r\n                </a>\r\n              </p>\r\n              <p>\r\n                <a href='#?keyword=pintu%20pvc%20panel&page=1' className='text-reset'>\r\n                Pintu PVC Panel\r\n                </a>\r\n              </p>\r\n              <p>\r\n                <a href='#?keyword=pintu%20alumunium&page=1' className='text-reset'>\r\n                  Pintu Alumunium\r\n                </a>\r\n              </p>\r\n            </div>\r\n\r\n            <div className='col-md-3 col-lg-2 col-xl-2 mx-auto mb-4'>\r\n              <h6 className='text-uppercase fw-bold mb-4' style={{ color: '#ffffff' }}>Useful links</h6>\r\n              <p>\r\n                <a href='#customdoor' className='text-reset'>\r\n                  Custom\r\n                </a>\r\n              </p>\r\n              <p>\r\n                <a href='#cart' className='text-reset'>\r\n                  Cart\r\n                </a>\r\n              </p>\r\n              <p>\r\n                <a href='#about' className='text-reset'>\r\n                  About Us\r\n                </a>\r\n              </p>\r\n            </div>\r\n\r\n            <div className='col-md-4 col-lg-3 col-xl-3 mx-auto mb-md-0 mb-4'>\r\n              <h6 className='text-uppercase fw-bold mb-4' style={{ color: '#ffffff' }}>Contact</h6>\r\n              <p>\r\n                <i className='fas fa-home me-3'></i> Jakarta, Indonesia\r\n              </p>\r\n              <p>\r\n                <i className='fas fa-envelope me-3'></i> saranateam@email.com\r\n              </p>\r\n              <p>\r\n                <i className='fas fa-phone me-3'></i> + 618 119 275 222\r\n              </p>\r\n              <p>\r\n                <i className='fas fa-print me-3'></i> + 618 119 275 222\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <div className='text-center p-4' style={{ backgroundColor: 'rgba(0, 0, 0, 0.05)' }}>\r\n        Copyright &copy; 2022 Sarana Pintu\r\n      </div>\r\n    </MDBFooter>\r\n  );\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nfunction Rating({ value, text, color }) {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 2\r\n                        ? 'fas fa-star'\r\n                        : value >= 1.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 3\r\n                        ? 'fas fa-star'\r\n                        : value >= 2.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 4\r\n                        ? 'fas fa-star'\r\n                        : value >= 3.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 5\r\n                        ? 'fas fa-star'\r\n                        : value >= 4.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Product({ product }) {\r\n    const formatter = new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'IDR',\r\n    })\r\n\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as=\"div\">\r\n                    <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                    </div>\r\n                </Card.Text>\r\n\r\n\r\n                <Card.Text as=\"h6\">\r\n                    {formatter.format(product.price)}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                height: '100px',\r\n                width: '100px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({ variant, children }) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\r\n    if (keyword) {\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    return (pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((x) => (\r\n                <LinkContainer\r\n                    key={x + 1}\r\n                    to={!isAdmin ?\r\n                        `/?keyword=${keyword}&page=${x + 1}`\r\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n                    }\r\n                >\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_CREATE_V2_REQUEST,\r\n    PRODUCT_CREATE_V2_SUCCESS,\r\n    PRODUCT_CREATE_V2_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const listProducts = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products${keyword}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductV2 = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_V2_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/createv2/`,\r\n            product,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_V2_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_V2_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { error, loading, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    const formatter = new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'IDR',\r\n    })\r\n\r\n    return (loading ? <Loader />\r\n        : error\r\n            ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Carousel pause='hover' className='bg-dark'>\r\n                    {products.map(product => (\r\n                        <Carousel.Item key={product._id}>\r\n                            <Link to={`/product/${product._id}`}>\r\n                                <Image src={product.image} alt={product.name} fluid />\r\n                                <Carousel.Caption className='carousel.caption'>\r\n                                    <h4>{product.name} ({formatter.format(product.price)})</h4>\r\n                                </Carousel.Caption>\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCarousel","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\n\r\nfunction HomeScreen({ history }) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const { error, loading, products, page, pages } = productList\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword))\r\n\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n            <div className='m-4'>\r\n                {!keyword && <ProductCarousel />}\r\n\r\n                <h1>Latest Products</h1>\r\n                {loading ? <Loader />\r\n                    : error ? <Message variant='danger'>{error}</Message>\r\n                        :\r\n                        <div>\r\n                            <Row className='m-4'>\r\n                                {products.filter(product => {return product.category != 'Custom'})\r\n                                .map(product => {\r\n                                    return(\r\n                                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                            <Product product={product} />  \r\n                                        </Col>\r\n                                    );\r\n                                }\r\n\r\n                                )}\r\n                            </Row>\r\n                            <Paginate page={page} pages={pages} keyword={keyword} />\r\n                        </div>\r\n                }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductScreen({ match, history }) {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview,\r\n    } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id, {\r\n            rating,\r\n            comment\r\n        }\r\n        ))\r\n    }\r\n\r\n    const formatter = new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'IDR',\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\r\n            {loading ?\r\n                <Loader />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <div className='m-4'>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                </Col>\r\n\r\n                                <Col md={3}>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <h3>{product.name}</h3>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Price: {formatter.format(product.price)}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Description: {product.description}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                        <ListGroup variant='flush'>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Price:</Col>\r\n                                                    <Col>\r\n                                                        <strong>{formatter.format(product.price)}</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Status:</Col>\r\n                                                    <Col>\r\n                                                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Qty</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                value={qty}\r\n                                                                onChange={(e) => setQty(e.target.value)}\r\n                                                            >\r\n                                                                {\r\n\r\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                        <option key={x + 1} value={x + 1}>\r\n                                                                            {x + 1}\r\n                                                                        </option>\r\n                                                                    ))\r\n                                                                }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button\r\n                                                    onClick={addToCartHandler}\r\n                                                    className='btn-block'\r\n                                                    disabled={product.countInStock == 0}\r\n                                                    type='button'>\r\n                                                    Add to Cart\r\n                                                </Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <h4 className='m-4'>Reviews</h4>\r\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n\r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews.map((review) => (\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825' />\r\n                                                <p>{review.createdAt.substring(0, 10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Write a review</h4>\r\n\r\n                                            {loadingProductReview && <Loader />}\r\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                            {userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>Select...</option>\r\n                                                            <option value='1'>1 - Poor</option>\r\n                                                            <option value='2'>2 - Fair</option>\r\n                                                            <option value='3'>3 - Good</option>\r\n                                                            <option value='4'>4 - Very Good</option>\r\n                                                            <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Review</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='5'\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        ></Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        disabled={loadingProductReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ) : (\r\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    )\r\n\r\n            }\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nfunction CartScreen({ match, location, history }) {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    const formatter = new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'IDR',\r\n    })\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Your cart is empty <Link to='/'>Go Back</Link>\r\n                    </Message>\r\n                ) : (\r\n                        <ListGroup variant='flush'>\r\n                            {cartItems.map(item => (\r\n                                <ListGroup.Item key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                            {item.category === 'Custom' ? (\r\n                                                <Image src='../static/images/about.jpg' alt={item.name} fluid rounded />\r\n                                                ) : (\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                    )}\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n\r\n                                        <Col md={3}>\r\n                                            {formatter.format(item.price)}\r\n                                        </Col>\r\n\r\n                                        <Col md={3}>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                value={item.qty}\r\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                            >\r\n                                                {\r\n\r\n                                                    [...Array(item.countInStock).keys()].map((x) => (\r\n                                                        <option key={x + 1} value={x + 1}>\r\n                                                            {x + 1}\r\n                                                        </option>\r\n                                                    ))\r\n                                                }\r\n\r\n                                            </Form.Control>\r\n                                        </Col>\r\n\r\n                                        <Col md={1}>\r\n                                            <Button\r\n                                                type='button'\r\n                                                variant='light'\r\n                                                onClick={() => removeFromCartHandler(item.product)}\r\n                                            >\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            {formatter.format(cartItems.reduce((acc, item) => acc + item.qty * item.price, 0))}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                            type='button'\r\n                            className='btn-block'\r\n                            disabled={cartItems.length === 0}\r\n                            onClick={checkoutHandler}\r\n                        >\r\n                            Proceed To Checkout\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n\r\n\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nfunction LoginScreen({ location, history }) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link\r\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account? <Link\r\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Sign In\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer >\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n\r\n    ORDER_PAYMENT_CREATE_REQUEST,\r\n    ORDER_PAYMENT_CREATE_SUCCESS,\r\n    ORDER_PAYMENT_CREATE_FAIL,\r\n} from '../constants/orderConstants'\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createOrderPayment = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAYMENT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAYMENT_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAYMENT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table, Image } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nfunction ProfileScreen({ history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n    \r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n        history.push('/profile')\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n    }\r\n\r\n    const formatter = new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'IDR',\r\n    })\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                </Button>\r\n\r\n                </Form>\r\n            </Col>\r\n\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                            <Table striped responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Date</th>\r\n                                        <th>Total</th>\r\n                                        <th>Paid</th>\r\n                                        <th>Delivered</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {orders.map(order => (\r\n                                        <tr key={order._id}>\r\n                                            <td>{order._id}</td>\r\n                                            <td>{order.createdAt.substring(0, 10)}</td>\r\n                                            <td>{formatter.format(order.totalPrice)}</td>\r\n                                            <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                                <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                            )}</td>\r\n                                            <td>\r\n                                                <LinkContainer to={`/detail/${order._id}`}>\r\n                                                    <Button className='btn-sm'>Details</Button>\r\n                                                </LinkContainer>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\r\n\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Login</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Shipping</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Payment</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Place Order</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nfunction ShippingScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter postal code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter country'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nfunction PaymentScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('GoPay')\r\n\r\n    if (!shippingAddress.address) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='GoPay'\r\n                            id='gopay'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='OVO'\r\n                            id='ovo'\r\n                            name='paymentMethod'\r\n                            onChange={(e) => setPaymentMethod('OVO')}\r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10)\r\n    cart.taxPrice = Number((0.082) * cart.itemsPrice)\r\n\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice))\r\n\r\n\r\n    if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n    const formatter = new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'IDR',\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\r\n                                {'  '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                Your cart is empty\r\n                            </Message> : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {cart.cartItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                    </Col>\r\n\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} X {formatter.format(item.price)} = {formatter.format(item.qty * item.price)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>{formatter.format(cart.itemsPrice)}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>{formatter.format(cart.shippingPrice)}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>{formatter.format(cart.taxPrice)}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>{formatter.format(cart.totalPrice)}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card, Form } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nfunction OrderScreen({ match, history }) {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    \r\n    const [sdkReady, setSdkReady] = useState(false)\r\n    \r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n    \r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n    \r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n    \r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    if (!loading && !error) {\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    }\r\n\r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AeDXja18CkwFUkL-HQPySbzZsiTrN52cG13mf9Yz7KiV2vNnGfTDP0wDEN9sGlhZHrbb_USawcJzVDgn'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, order, orderId, successPay, successDeliver])\r\n\r\n    const submitHandler = () => {\r\n        history.push('/profile')\r\n    }\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    const formatter = new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'IDR',\r\n    })\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n                <div>\r\n                    <h1>Order: {order.Id}</h1>\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Shipping</h2>\r\n                                    <p><strong>Name: </strong> {order.user.name}</p>\r\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                                    <p>\r\n                                        <strong>Shipping: </strong>\r\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\r\n                                        {'  '}\r\n                                        {order.shippingAddress.postalCode},\r\n                                        {'  '}\r\n                                        {order.shippingAddress.country}\r\n                                    </p>\r\n\r\n                                    {order.isDelivered ? (\r\n                                        <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Not Delivered</Message>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Payment Status</h2>\r\n                                    {order.isPaid ? (\r\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Not Paid</Message>\r\n                                        )}\r\n\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Items</h2>\r\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                        Order is empty\r\n                            </Message> : (\r\n                                            <ListGroup variant='flush'>\r\n                                                {order.orderItems.map((item, index) => (\r\n                                                    <ListGroup.Item key={index}>\r\n                                                        <Row>\r\n                                                            <Col md={1}>\r\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                            </Col>\r\n\r\n                                                            <Col>\r\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4}>\r\n                                                                {item.qty} X {formatter.format(item.price)} = {formatter.format(item.qty * item.price)}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))}\r\n                                            </ListGroup>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                            </ListGroup>\r\n\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <h2>Order Summary</h2>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Items:</Col>\r\n                                            <Col>{formatter.format(order.itemsPrice)}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Shipping:</Col>\r\n                                            <Col>{formatter.format(order.shippingPrice)}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Tax:</Col>\r\n                                            <Col>{formatter.format(order.taxPrice)}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Total:</Col>\r\n                                            <Col>{formatter.format(order.totalPrice)}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {!order.isPaid && (\r\n                                        <Card>\r\n                                            <Form onSubmit={submitHandler} className='m-2 text-center'>\r\n                                                {cart.paymentMethod === 'GoPay' ? (\r\n                                                    <Button\r\n                                                        className='btn-block btn btn-light'\r\n                                                        type='submit'\r\n                                                        style={{ background: '#ffffff' }}>\r\n                                                        <Image src='../static/images/gopay-logo.jpg' fluid rounded style={{ width: '40%' }} />\r\n                                                    </Button>\r\n                                                ) : (\r\n                                                    <Button\r\n                                                        className='btn-block btn btn-light'\r\n                                                        type='submit'\r\n                                                        style={{ background: '#4E3394' }}>\r\n                                                        <Image src='../static/images/ovo-logo.png' fluid rounded style={{ width: '40%' }} />\r\n                                                    </Button>\r\n                                                )}\r\n                                                {loadingPay && <Loader />}\r\n                                            </Form>\r\n                                        </Card>\r\n                                    )}\r\n                                </ListGroup>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )\r\n}\r\n\r\nexport default OrderScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nfunction UserListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this user?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {users.map(user => (\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n\r\n            if (!user.name || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    }, [user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/userlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter Email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='isadmin'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is Admin'\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserEditScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductListScreen({ history, match }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts(keyword))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this product?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <div>\r\n                            <Table striped bordered hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>NAME</th>\r\n                                        <th>PRICE</th>\r\n                                        <th>CATEGORY</th>\r\n                                        <th>BRAND</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {products.map(product => (\r\n                                        <tr key={product._id}>\r\n                                            <td>{product._id}</td>\r\n                                            <td>{product.name}</td>\r\n                                            <td>Rp.{product.price}</td>\r\n                                            <td>{product.category}</td>\r\n                                            <td>{product.brand}</td>\r\n\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                    <Button variant='light' className='btn-sm'>\r\n                                                        <i className='fas fa-edit'></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n\r\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                                    <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                            <Paginate pages={pages} page={page} isAdmin={true} />\r\n                        </div>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductEditScreen({ match, history }) {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== Number(productId)) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter price'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n\r\n                                </Form.File>\r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label>Brand</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter brand'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label>Stock</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter stock'\r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nfunction OrderListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>Rp.{order.totalPrice}</td>\r\n\r\n                                        <td>{order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts, deleteProduct, createProductV2 } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_V2_RESET } from '../constants/productConstants'\r\n\r\nfunction CustomDoorScreen({ match, location, history }) {\r\n    const dispatch = useDispatch()\r\n\r\n    const [lebar, setLebar] = useState(\"\")\r\n    const [tinggi, setTinggi] = useState(\"\")\r\n    const [kuantitas, setKuantitas] = useState(0)\r\n    const [warna, setWarna] = useState(\"\")\r\n    const [tipe, setTipe] = useState(\"\")\r\n    const [kunci, setKunci] = useState(\"\")\r\n    const [totalHarga, setTotalHarga] = useState(\"\")\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreateV2 = useSelector(state => state.productCreateV2)\r\n    const { loading: loadingCreateV2, error: errorCreateV2, success: successCreateV2, product: createdProductV2 } = productCreateV2\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_V2_RESET })\r\n\r\n        if (successCreateV2) {\r\n            history.push(`/cart/${createdProductV2._id}?qty=${createdProductV2.countInStock}`)\r\n        } else {\r\n            dispatch(listProducts(keyword))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreateV2, createdProductV2, keyword])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductV2({\r\n            name: \"Pintu Custom \" +lebar + \" x \" + tinggi,\r\n            price: parseInt((parseInt(lebar)+parseInt(tinggi))*parseInt(kuantitas)*2250),\r\n            brand: \"Sarana Pintu\",\r\n            category: \"Custom\",\r\n            countInStock: kuantitas,\r\n            description: \"Pintu Custom dengan detail: \\n\" + \"Warna: \" + warna + \"\\n\" + \"Tipe: \" + tipe + \"\\n\" + \"Kunci: \" + kunci + \"\\n\"\r\n        }))\r\n    }\r\n\r\n    const formatter = new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'IDR',\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Form onSubmit={submitHandler}>\r\n                <Row>\r\n                    <Col>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formUkuranLebar\">\r\n                    <Form.Label>Lebar</Form.Label>\r\n                    <Form.Control type=\"number\" placeholder=\"Lebar\" onChange={(e) => setLebar(e.target.value)}/>\r\n                    <p style={{ color: '#c61a09'}}>Lebar tidak boleh kurang dari 20cm atau lebih dari 100cm</p>\r\n                </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formUkuranTinggi\">\r\n                    <Form.Label>Tinggi</Form.Label>\r\n                    <Form.Control type=\"number\" placeholder=\"Tinggi\" onChange={(e) => setTinggi(e.target.value)}/>\r\n                    <p style={{ color: '#c61a09'}}>Tinggi tidak boleh kurang dari 100cm atau lebih dari 240cm</p>\r\n                </Form.Group>\r\n\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Form.Group  className=\"mb-3\" controlId=\"formWarna\">\r\n                    <Form.Label>Tipe</Form.Label>\r\n                    <Form.Control as=\"select\" onChange={(e) => setWarna(e.target.value)}>\r\n                        <option>Merah</option>\r\n                        <option>Kuning</option>\r\n                        <option>Hijau</option>\r\n                        <option>Jingga</option>\r\n                        <option>Biru</option>\r\n                        <option>Nila</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group  className=\"mb-3\" controlId=\"formKunci\">\r\n                    <Form.Label>Kunci</Form.Label>\r\n                    <Form.Control as=\"select\" onChange={(e) => setKunci(e.target.value)}>\r\n                        <option>Gagang</option>\r\n                        <option>Kenob</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group  className=\"mb-3\" controlId=\"formTipe\">\r\n                    <Form.Label>Tipe</Form.Label>\r\n                    <Form.Control as=\"select\" onChange={(e) => setTipe(e.target.value)}>\r\n                        <option>Pintu Millenial</option>\r\n                        <option>Pintu PVC Biasa</option>\r\n                        <option>Pintu PVC Panel</option>\r\n                        <option>Pintu Alumunium</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"Kuantitas\">\r\n                    <Form.Label>Kuantitas</Form.Label>\r\n                    <Form.Control type=\"number\" placeholder=\"Kuantitas\" min={1} onChange={(e) => setKuantitas(e.target.value)}/>\r\n                </Form.Group>\r\n\r\n                <br></br>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Label as=\"h4\">Harga</Form.Label>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                        <Form.Label as=\"h4\">{formatter.format((parseInt(lebar)+parseInt(tinggi))*parseInt(kuantitas)*2250)}</Form.Label>\r\n                    </Col>\r\n\r\n                </Row>\r\n                <br></br>\r\n                <br></br>\r\n                {lebar < 20 || lebar > 100 || tinggi < 100 || tinggi > 240 || kuantitas === 0 ? (\r\n                    <Message variant='primary'>\r\n                        Please fill in all the required fields!\r\n                    </Message>\r\n                ) : (\r\n                    <Button type='submit' variant='primary'>\r\n                        Pesan Custom Pintu\r\n                    </Button>\r\n                )}\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomDoorScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { listNotifications, deleteNotification, createNotification } from '../actions/notificationActions'\r\nimport { NOTIFICATION_CREATE_RESET } from '../constants/notificationConstants'\r\n\r\nfunction NotificationCenterScreen({ history, match }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const notificationList = useSelector(state => state.notificationList)\r\n    const { loading, error, notifications, pages, page } = notificationList\r\n\r\n    const notificationDelete = useSelector(state => state.notificationDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = notificationDelete\r\n\r\n    const notificationCreate = useSelector(state => state.notificationCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, notification: createdNotification } = notificationCreate\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n        dispatch({ type: NOTIFICATION_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/notificationcenter/${createdNotification._id}/edit`)\r\n        } else {\r\n            dispatch(listNotifications(keyword))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdNotification, keyword])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this notification?')) {\r\n            dispatch(deleteNotification(id))\r\n        }\r\n    }\r\n\r\n    const createNotificationHandler = () => {\r\n        dispatch(createNotification())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Notification Center</h1>\r\n                </Col>\r\n\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createNotificationHandler}>\r\n                        <i className='fas fa-plus'></i> Create Notification\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <div>\r\n                            <Table striped bordered hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>TITLE</th>\r\n                                        <th>DESCRIPTION</th>\r\n                                        <th>LINK</th>\r\n                                        <th>ACTIONS</th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {notifications.map(notification => (\r\n                                        <tr key={notification._id}>\r\n                                            <td>{notification._id}</td>\r\n                                            <td>{notification.title}</td>\r\n                                            <td>{notification.description}</td>\r\n                                            <td>{notification.link}</td>\r\n\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/notification/${notification._id}/edit`}>\r\n                                                    <Button variant='light' className='btn-sm'>\r\n                                                        <i className='fas fa-edit'></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n\r\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(notification._id)}>\r\n                                                    <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                            <Paginate pages={pages} page={page} isAdmin={true} />\r\n                        </div>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotificationCenterScreen","import axios from 'axios'\r\nimport {\r\n    NOTIFICATION_LIST_REQUEST,\r\n    NOTIFICATION_LIST_SUCCESS,\r\n    NOTIFICATION_LIST_FAIL,\r\n\r\n    NOTIFICATION_DETAILS_REQUEST,\r\n    NOTIFICATION_DETAILS_SUCCESS,\r\n    NOTIFICATION_DETAILS_FAIL,\r\n\r\n    NOTIFICATION_DELETE_REQUEST,\r\n    NOTIFICATION_DELETE_SUCCESS,\r\n    NOTIFICATION_DELETE_FAIL,\r\n\r\n    NOTIFICATION_CREATE_REQUEST,\r\n    NOTIFICATION_CREATE_SUCCESS,\r\n    NOTIFICATION_CREATE_FAIL,\r\n\r\n    NOTIFICATION_UPDATE_REQUEST,\r\n    NOTIFICATION_UPDATE_SUCCESS,\r\n    NOTIFICATION_UPDATE_FAIL,\r\n} from '../constants/notificationConstants'\r\n\r\n\r\nexport const listNotifications = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: NOTIFICATION_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/notifications${keyword}`)\r\n\r\n        dispatch({\r\n            type: NOTIFICATION_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NOTIFICATION_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listNotificationDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: NOTIFICATION_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/notifications/${id}`)\r\n\r\n        dispatch({\r\n            type: NOTIFICATION_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NOTIFICATION_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteNotification = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: NOTIFICATION_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/notifications/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: NOTIFICATION_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NOTIFICATION_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const createNotification = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: NOTIFICATION_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/notifications/create/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: NOTIFICATION_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NOTIFICATION_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateNotification = (notification) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: NOTIFICATION_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/notifications/update/${notification._id}/`,\r\n            notification,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: NOTIFICATION_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n        dispatch({\r\n            type: NOTIFICATION_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NOTIFICATION_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listNotificationDetails, updateNotification } from '../actions/notificationActions'\r\nimport { NOTIFICATION_UPDATE_RESET } from '../constants/notificationConstants'\r\n\r\n\r\nfunction NotificationEditScreen({ match, history }) {\r\n\r\n    const notificationId = match.params.id\r\n\r\n    const [title, setTitle] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [link, setLink] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const notificationDetails = useSelector(state => state.notificationDetails)\r\n    const { error, loading, notification } = notificationDetails\r\n\r\n    const notificationUpdate = useSelector(state => state.notificationUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = notificationUpdate\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: NOTIFICATION_UPDATE_RESET })\r\n            history.push('/admin/notificationcenterlist')\r\n        } else {\r\n            if (!notification.name || notification._id !== Number(notificationId)) {\r\n                dispatch(listNotificationDetails(notificationId))\r\n            } else {\r\n                setTitle(notification.title)\r\n                setDescription(notification.description)\r\n                setLink(notification.link)\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, notification, notificationId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateNotification({\r\n            _id: notificationId,\r\n            title,\r\n            description,\r\n            link,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/notificationcenterlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit Notification</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='title'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter title'\r\n                                    value={title}\r\n                                    onChange={(e) => setTitle(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='link'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter link'\r\n                                    value={link}\r\n                                    onChange={(e) => setLink(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default NotificationEditScreen","import React from 'react'\r\nimport { Container, Row, Col, Card } from 'react-bootstrap'\r\n\r\nfunction AboutUs() {\r\n  return (\r\n    <Container>\r\n      <h1 className='text-center'>About Sarana Pintu</h1>\r\n      <Card>\r\n        <Card.Body>\r\n          <Card.Img src=\"../static/images/about.jpg\" />\r\n        </Card.Body>\r\n      </Card>\r\n      <Row className='m-4'>\r\n        <Col>\r\n          <h3 className='text-center'>Our Business</h3>\r\n          Sarana Pintu adalah perusahaan yang bergerak dalam bidang pertukangan yang memfokuskan dalam pintu pvc. perusahaan ini berdiri sejak tahun 2006 dengan nama awal sarana aneka pintu yang berlokasi di jakarta barat. perusahaan kami memilih untuk mengembangkan pintu pvc karena pintu pvc banyak digunakan orang untuk pintu kamar mandi. Dengan bahan PVC atau disebut juga Polyvinyl Chloride maka pintu akan tahan air dan tidak mudah lapuk. Perusahaan kami juga sudah menangani banyak proyek seperti proyek apertement mgr 2, tokyo riverside, ruko sumarecon, golden city bekasi, dan masi banyak lagi\r\n        </Col>  \r\n      </Row>\r\n      <Card>\r\n        <Card.Body>\r\n        <Row className='m-4'>\r\n          <Col>\r\n            <h3 className='text-center'>Our Vision</h3>\r\n            <p>Dengan menyediakan produk dengan kualitas terbaik, kami memberikan solusi kolaboratif untuk memberikan layanan terbaik kepada konsumen.</p>\r\n          </Col>\r\n          <Col>\r\n            <h3 className='text-center'>Our Mision</h3>\r\n            <p>Menciptakan dan mengembangkan produk pintu kualitas terbaik dengan harga terjangkau bagi konsumen.</p>\r\n          </Col>\r\n        </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default AboutUs","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport { CART_ADD_ITEM } from '../constants/cartConstants'\r\n\r\nfunction DetailScreen({ match, history }) {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    if (!loading && !error) {\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    }\r\n\r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AeDXja18CkwFUkL-HQPySbzZsiTrN52cG13mf9Yz7KiV2vNnGfTDP0wDEN9sGlhZHrbb_USawcJzVDgn'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, order, orderId, successPay, successDeliver])\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    const formatter = new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'IDR',\r\n    })\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n                <div>\r\n                    <Link to='/profile' className='btn btn-light my-3'>Go Back</Link>\r\n                    <h1>Order ID: {order._id}</h1>\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Shipping</h2>\r\n                                    <p><strong>Name: </strong> {order.user.name}</p>\r\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                                    <p>\r\n                                        <strong>Shipping: </strong>\r\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\r\n                                        {'  '}\r\n                                        {order.shippingAddress.postalCode},\r\n                                        {'  '}\r\n                                        {order.shippingAddress.country}\r\n                                    </p>\r\n\r\n                                    {order.isDelivered ? (\r\n                                        <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='success'>Delivered on {(order.createdAt.substring(0, 10))}</Message>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Payment Method</h2>\r\n                                    <p>\r\n                                        <strong>Method: </strong>\r\n                                        {order.paymentMethod}\r\n                                    </p>\r\n                                    {order.isPaid ? (\r\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='success'>Paid on {order.createdAt.substring(0, 10)}</Message>\r\n                                        )}\r\n\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Items</h2>\r\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                        Order is empty\r\n                            </Message> : (\r\n                                            <ListGroup variant='flush'>\r\n                                                {order.orderItems.map((item, index) => (\r\n                                                    <ListGroup.Item key={index}>\r\n                                                        <Row>\r\n                                                            <Col md={1}>\r\n                                                                {(item.name).includes(\"pintu custom\") ? (\r\n                                                                    <Image src='../static/images/about.jpg' alt={item.name} fluid rounded />\r\n                                                                ) : (\r\n                                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                                )}\r\n                                                            </Col>\r\n\r\n                                                            <Col>\r\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4}>\r\n                                                                {item.qty} x {formatter.format(item.price)} = Rp. {formatter.format(item.qty * item.price)}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))}\r\n                                            </ListGroup>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                            </ListGroup>\r\n\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                            <Card className='my-3'>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <h2>Order Summary</h2>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Items:</Col>\r\n                                            <Col>Rp. {order.itemsPrice.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Shipping:</Col>\r\n                                            <Col>Rp. {order.shippingPrice.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Tax:</Col>\r\n                                            <Col>Rp. {order.taxPrice.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Total:</Col>\r\n                                            <Col>Rp. {order.totalPrice.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Card>\r\n                            <Message variant='primary'>Successfully paid!</Message>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )\r\n}\r\n\r\nexport default DetailScreen","import { Container } from 'react-bootstrap'\r\nimport { HashRouter as Router, Route } from 'react-router-dom'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport HomeScreen from './screens/HomeScreen'\r\nimport ProductScreen from './screens/ProductScreen'\r\nimport CartScreen from './screens/CartScreen'\r\nimport LoginScreen from './screens/LoginScreen'\r\nimport RegisterScreen from './screens/RegisterScreen'\r\nimport ProfileScreen from './screens/ProfileScreen'\r\nimport ShippingScreen from './screens/ShippingScreen'\r\nimport PaymentScreen from './screens/PaymentScreen'\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\r\nimport OrderScreen from './screens/OrderScreen'\r\nimport UserListScreen from './screens/UserListScreen'\r\nimport UserEditScreen from './screens/UserEditScreen'\r\nimport ProductListScreen from './screens/ProductListScreen'\r\nimport ProductEditScreen from './screens/ProductEditScreen'\r\nimport OrderListScreen from './screens/OrderListScreen'\r\nimport CustomDoorScreen from './screens/CustomDoorScreen'\r\nimport NotificationCenterScreen from './screens/NotificationCenterScreen'\r\nimport NotificationEditScreen from './screens/NotificationEditScreen'\r\nimport AboutScreen from './screens/AboutScreen'\r\nimport DetailScreen from './screens/DetailScreen'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <main className=\"py-3\">\r\n        <Container>\r\n          <Route path='/' component={HomeScreen} exact />\r\n          <Route path='/customdoor' component={CustomDoorScreen} />\r\n          <Route path='/about' component={AboutScreen} />\r\n          <Route path='/login' component={LoginScreen} />\r\n          <Route path='/register' component={RegisterScreen} />\r\n          <Route path='/profile' component={ProfileScreen} />\r\n          <Route path='/shipping' component={ShippingScreen} />\r\n          <Route path='/placeorder' component={PlaceOrderScreen} />\r\n          <Route path='/order/:id' component={OrderScreen} />\r\n          <Route path='/payment' component={PaymentScreen} />\r\n          <Route path='/product/:id' component={ProductScreen} />\r\n          <Route path='/cart/:id?' component={CartScreen} />\r\n          <Route path='/detail/:id' component={DetailScreen} />\r\n\r\n          <Route path='/admin/userlist' component={UserListScreen} />\r\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\r\n\r\n          <Route path='/admin/productlist' component={ProductListScreen} />\r\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\r\n\r\n          <Route path='/admin/notificationcenterlist' component={NotificationCenterScreen} />\r\n          <Route path='/admin/notificationcenter/:id/edit' component={NotificationEditScreen} />\r\n\r\n          <Route path='/admin/orderlist' component={OrderListScreen} />\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport './index.css';\r\nimport './bootstrap.min.css';\r\nimport 'mdb-react-ui-kit/dist/css/mdb.min.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration.js';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}